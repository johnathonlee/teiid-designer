<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Diagram="http://www.metamatrix.com/metamodels/Diagram" xmlns:Relational="http://www.metamatrix.com/metamodels/Relational" xmlns:Transformation="http://www.metamatrix.com/metamodels/Transformation" xmlns:mmcore="http://www.metamatrix.com/metamodels/Core">
  <mmcore:ModelAnnotation xmi:uuid="mmuuid:d9bc9d40-61d1-1f26-8433-802bd8dcc550" primaryMetamodelUri="http://www.metamatrix.com/metamodels/Relational" modelType="VIRTUAL">
    <modelImports xmi:uuid="mmuuid:eabb7fc0-6231-1f26-8433-802bd8dcc550" name="Products" path="/UpdateCustAccts/Products.xmi" uuid="mmuuid:e32316c0-618b-1f26-8433-802bd8dcc550" modelType="PHYSICAL" primaryMetamodelUri="http://www.metamatrix.com/metamodels/Relational"/>
    <modelImports xmi:uuid="mmuuid:eba06186-6231-1f26-8433-802bd8dcc550" name="XMLSchema" path="http://www.w3.org/2001/XMLSchema"/>
    <modelImports xmi:uuid="mmuuid:ec948580-6231-1f26-8433-802bd8dcc550" name="SimpleDatatypes-instance" path="http://www.metamatrix.com/metamodels/SimpleDatatypes-instance"/>
    <modelImports xmi:uuid="mmuuid:1a740300-6245-1f26-8433-802bd8dcc550" name="CustomerAccounts" path="/UpdateCustAccts/CustomerAccounts.xmi" uuid="mmuuid:260f2380-61c2-1f26-8433-802bd8dcc550" modelType="PHYSICAL" primaryMetamodelUri="http://www.metamatrix.com/metamodels/Relational"/>
  </mmcore:ModelAnnotation>
  <Diagram:DiagramContainer xmi:uuid="mmuuid:f4bcd881-61d1-1f26-8433-802bd8dcc550">
    <diagram xmi:uuid="mmuuid:f4bcd880-61d1-1f26-8433-802bd8dcc550" type="packageDiagramType" target="mmuuid/d9bc9d40-61d1-1f26-8433-802bd8dcc550">
      <diagramEntity xmi:uuid="mmuuid:4e440bc0-61d3-1f26-8433-802bd8dcc550" name="UpdateProduct" modelObject="mmuuid/d35c6c40-61d2-1f26-8433-802bd8dcc550" xPosition="120" yPosition="70" height="46" width="128"/>
      <diagramEntity xmi:uuid="mmuuid:ac9072c0-61d5-1f26-8433-802bd8dcc550" name="UpdateAccount" modelObject="mmuuid/408f85c0-61d5-1f26-8433-802bd8dcc550" xPosition="140" yPosition="80" height="46" width="130"/>
      <diagramEntity xmi:uuid="mmuuid:61681d00-61d7-1f26-8433-802bd8dcc550" name="UpdateTransaction" modelObject="mmuuid/132552c0-61d7-1f26-8433-802bd8dcc550" xPosition="160" yPosition="90" height="46" width="151"/>
    </diagram>
    <diagram xmi:uuid="mmuuid:48a9b840-61d3-1f26-8433-802bd8dcc550" type="transformationDiagramType" target="mmuuid/d35c6c40-61d2-1f26-8433-802bd8dcc550">
      <diagramEntity xmi:uuid="mmuuid:2c977680-6230-1f26-8433-802bd8dcc550" modelObject="mmuuid/d35c6c40-61d2-1f26-8433-802bd8dcc550" xPosition="10" yPosition="209" height="253" width="169"/>
      <diagramEntity xmi:uuid="mmuuid:2c977681-6230-1f26-8433-802bd8dcc550" name="T" modelObject="mmuuid/69484500-61db-1f26-8433-802bd8dcc550" xPosition="228" yPosition="212" height="40" width="40"/>
      <diagramEntity xmi:uuid="mmuuid:0888e4c0-6232-1f26-8433-802bd8dcc550" xPosition="388" yPosition="10" height="250" width="164">
        <modelObject href="Products.xmi#mmuuid/f401d342-618c-1f26-8433-802bd8dcc550"/>
      </diagramEntity>
      <diagramEntity xmi:uuid="mmuuid:0a61ea80-6232-1f26-8433-802bd8dcc550" xPosition="388" yPosition="270" height="175" width="169">
        <modelObject href="Products.xmi#mmuuid/f5dad900-618c-1f26-8433-802bd8dcc550"/>
      </diagramEntity>
    </diagram>
    <diagram xmi:uuid="mmuuid:aab76d00-61d5-1f26-8433-802bd8dcc550" type="transformationDiagramType" target="mmuuid/408f85c0-61d5-1f26-8433-802bd8dcc550">
      <diagramEntity xmi:uuid="mmuuid:f0f56640-623f-1f26-8433-802bd8dcc550" modelObject="mmuuid/408f85c0-61d5-1f26-8433-802bd8dcc550" xPosition="10" yPosition="224" height="298" width="181"/>
      <diagramEntity xmi:uuid="mmuuid:f0f56641-623f-1f26-8433-802bd8dcc550" name="T" modelObject="mmuuid/772b1180-61da-1f26-8433-802bd8dcc550" xPosition="230" yPosition="227" height="40" width="40"/>
      <diagramEntity xmi:uuid="mmuuid:418dc700-6245-1f26-8433-802bd8dcc550" xPosition="390" yPosition="10" height="265" width="181">
        <modelObject href="CustomerAccounts.xmi#mmuuid/568488c0-61c2-1f26-8433-802bd8dcc550"/>
      </diagramEntity>
      <diagramEntity xmi:uuid="mmuuid:4366ccc0-6245-1f26-8433-802bd8dcc550" xPosition="390" yPosition="285" height="190" width="167">
        <modelObject href="CustomerAccounts.xmi#mmuuid/53b75f02-61c2-1f26-8433-802bd8dcc550"/>
      </diagramEntity>
    </diagram>
    <diagram xmi:uuid="mmuuid:5f7fd500-61d7-1f26-8433-802bd8dcc550" type="transformationDiagramType" target="mmuuid/132552c0-61d7-1f26-8433-802bd8dcc550">
      <diagramEntity xmi:uuid="mmuuid:76ec61c0-6251-1f26-8433-802bd8dcc550" modelObject="mmuuid/132552c0-61d7-1f26-8433-802bd8dcc550" xPosition="10" yPosition="302" height="178" width="180"/>
      <diagramEntity xmi:uuid="mmuuid:76ec61c1-6251-1f26-8433-802bd8dcc550" name="T" modelObject="mmuuid/7617e940-61d9-1f26-8433-802bd8dcc550" xPosition="251" yPosition="305" height="40" width="40"/>
      <diagramEntity xmi:uuid="mmuuid:68824000-6256-1f26-8433-802bd8dcc550" xPosition="411" yPosition="10" height="250" width="164">
        <modelObject href="Products.xmi#mmuuid/f401d342-618c-1f26-8433-802bd8dcc550"/>
      </diagramEntity>
      <diagramEntity xmi:uuid="mmuuid:6a6a8800-6256-1f26-8433-802bd8dcc550" xPosition="411" yPosition="270" height="175" width="180">
        <modelObject href="CustomerAccounts.xmi#mmuuid/54ab8300-61c2-1f26-8433-802bd8dcc550"/>
      </diagramEntity>
      <diagramEntity xmi:uuid="mmuuid:6c438dc0-6256-1f26-8433-802bd8dcc550" xPosition="411" yPosition="455" height="175" width="169">
        <modelObject href="Products.xmi#mmuuid/f5dad900-618c-1f26-8433-802bd8dcc550"/>
      </diagramEntity>
    </diagram>
  </Diagram:DiagramContainer>
  <Relational:BaseTable xmi:uuid="mmuuid:d35c6c40-61d2-1f26-8433-802bd8dcc550" name="UpdateProduct">
    <columns xmi:uuid="mmuuid:eba06181-6231-1f26-8433-802bd8dcc550" name="INSTR_ID" length="10" nullable="NO_NULLS">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:eba06187-6231-1f26-8433-802bd8dcc550" name="SYMBOL_TYPE" fixedLength="true" caseSensitive="false" searchability="ALL_EXCEPT_LIKE">
      <type href="http://www.metamatrix.com/metamodels/SimpleDatatypes-instance#biginteger"/>
    </columns>
    <columns xmi:uuid="mmuuid:ec948581-6231-1f26-8433-802bd8dcc550" name="SYMBOL" length="10" nullable="NO_NULLS">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:ec948586-6231-1f26-8433-802bd8dcc550" name="CUSIP" length="10">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:ec94858b-6231-1f26-8433-802bd8dcc550" name="NAME" length="60">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:ed88a980-6231-1f26-8433-802bd8dcc550" name="TYPE" length="15">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:ee6d8b40-6231-1f26-8433-802bd8dcc550" name="ISSUER" length="10">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:ee6d8b45-6231-1f26-8433-802bd8dcc550" name="EXCHANGE" length="10">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:ef61af42-6231-1f26-8433-802bd8dcc550" name="ISDJI" fixedLength="true" nullable="NO_NULLS" caseSensitive="false" searchability="ALL_EXCEPT_LIKE">
      <type href="http://www.w3.org/2001/XMLSchema#boolean"/>
    </columns>
    <columns xmi:uuid="mmuuid:ef61af47-6231-1f26-8433-802bd8dcc550" name="ISSP500" fixedLength="true" nullable="NO_NULLS" caseSensitive="false" searchability="ALL_EXCEPT_LIKE">
      <type href="http://www.w3.org/2001/XMLSchema#boolean"/>
    </columns>
    <columns xmi:uuid="mmuuid:f0469100-6231-1f26-8433-802bd8dcc550" name="ISNAS100" fixedLength="true" nullable="NO_NULLS" caseSensitive="false" searchability="ALL_EXCEPT_LIKE">
      <type href="http://www.w3.org/2001/XMLSchema#boolean"/>
    </columns>
    <columns xmi:uuid="mmuuid:f0469105-6231-1f26-8433-802bd8dcc550" name="ISAMEXINT" fixedLength="true" nullable="NO_NULLS" caseSensitive="false" searchability="ALL_EXCEPT_LIKE">
      <type href="http://www.w3.org/2001/XMLSchema#boolean"/>
    </columns>
    <columns xmi:uuid="mmuuid:f046910a-6231-1f26-8433-802bd8dcc550" name="PRIBUSINESS" length="30">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
  </Relational:BaseTable>
  <Relational:BaseTable xmi:uuid="mmuuid:408f85c0-61d5-1f26-8433-802bd8dcc550" name="UpdateAccount">
    <columns xmi:uuid="mmuuid:1b58e4c1-6245-1f26-8433-802bd8dcc550" name="CUSTID" length="12" nullable="NO_NULLS">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:1c4d08c0-6245-1f26-8433-802bd8dcc550" name="FIRSTNAME" length="25" nullable="NO_NULLS">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:1c4d08c5-6245-1f26-8433-802bd8dcc550" name="LASTNAME" length="25" nullable="NO_NULLS">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:1c4d08ca-6245-1f26-8433-802bd8dcc550" name="MIDDLENAME" length="15">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:1d31ea84-6245-1f26-8433-802bd8dcc550" name="ADDRESS1" length="50" nullable="NO_NULLS">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:1d31ea89-6245-1f26-8433-802bd8dcc550" name="ADDRESS2" length="50">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:1e260e80-6245-1f26-8433-802bd8dcc550" name="CITY" length="25" nullable="NO_NULLS">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:1e260e85-6245-1f26-8433-802bd8dcc550" name="STATEPROVINCE" length="25">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:1f1a3280-6245-1f26-8433-802bd8dcc550" name="POSTALCODE" length="15" nullable="NO_NULLS">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:1f1a3285-6245-1f26-8433-802bd8dcc550" name="COUNTRY" length="10">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:1f1a328a-6245-1f26-8433-802bd8dcc550" name="PHONE" length="30">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:1fff1440-6245-1f26-8433-802bd8dcc550" name="ACCTID" fixedLength="true" nullable="NO_NULLS" caseSensitive="false" searchability="ALL_EXCEPT_LIKE">
      <type href="http://www.w3.org/2001/XMLSchema#long"/>
    </columns>
    <columns xmi:uuid="mmuuid:1fff1445-6245-1f26-8433-802bd8dcc550" name="AccountType" length="10">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:1fff144a-6245-1f26-8433-802bd8dcc550" name="STATUS" length="10" fixedLength="true">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:20f33840-6245-1f26-8433-802bd8dcc550" name="DATEOPENED" fixedLength="true" precision="3" scale="3" nullable="NO_NULLS" caseSensitive="false" searchability="ALL_EXCEPT_LIKE">
      <type href="http://www.metamatrix.com/metamodels/SimpleDatatypes-instance#timestamp"/>
    </columns>
    <columns xmi:uuid="mmuuid:20f33845-6245-1f26-8433-802bd8dcc550" name="DATECLOSED" fixedLength="true" precision="3" scale="3" caseSensitive="false" searchability="ALL_EXCEPT_LIKE">
      <type href="http://www.metamatrix.com/metamodels/SimpleDatatypes-instance#timestamp"/>
    </columns>
  </Relational:BaseTable>
  <Relational:BaseTable xmi:uuid="mmuuid:132552c0-61d7-1f26-8433-802bd8dcc550" name="UpdateTransaction">
    <columns xmi:uuid="mmuuid:51435283-6256-1f26-8433-802bd8dcc550" name="TRANID" length="12">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:52283440-6256-1f26-8433-802bd8dcc550" name="ACCTID" fixedLength="true" nullable="NO_NULLS" caseSensitive="false" searchability="ALL_EXCEPT_LIKE">
      <type href="http://www.w3.org/2001/XMLSchema#long"/>
    </columns>
    <columns xmi:uuid="mmuuid:52283445-6256-1f26-8433-802bd8dcc550" name="INSTRID" length="12">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:5228344a-6256-1f26-8433-802bd8dcc550" name="PURCHASEDATE" fixedLength="true" precision="3" scale="3" nullable="NO_NULLS" caseSensitive="false" searchability="ALL_EXCEPT_LIKE">
      <type href="http://www.metamatrix.com/metamodels/SimpleDatatypes-instance#timestamp"/>
    </columns>
    <columns xmi:uuid="mmuuid:531c5840-6256-1f26-8433-802bd8dcc550" name="SHARES" fixedLength="true" nullable="NO_NULLS" caseSensitive="false" searchability="ALL_EXCEPT_LIKE" radix="2">
      <type href="http://www.w3.org/2001/XMLSchema#float"/>
    </columns>
    <columns xmi:uuid="mmuuid:531c5845-6256-1f26-8433-802bd8dcc550" name="TickerSymbol" length="10">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:531c584a-6256-1f26-8433-802bd8dcc550" name="CUSIP" length="10">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
    <columns xmi:uuid="mmuuid:54107c40-6256-1f26-8433-802bd8dcc550" name="ProductName" length="60">
      <type href="http://www.w3.org/2001/XMLSchema#string"/>
    </columns>
  </Relational:BaseTable>
  <Transformation:TransformationContainer xmi:uuid="mmuuid:7617e941-61d9-1f26-8433-802bd8dcc550">
    <transformationMappings xsi:type="Transformation:SqlTransformationMappingRoot" xmi:uuid="mmuuid:7617e940-61d9-1f26-8433-802bd8dcc550" outputs="mmuuid/132552c0-61d7-1f26-8433-802bd8dcc550" target="mmuuid/132552c0-61d7-1f26-8433-802bd8dcc550">
      <helper xsi:type="Transformation:SqlTransformation" xmi:uuid="mmuuid:7617e942-61d9-1f26-8433-802bd8dcc550" selectSql="SELECT mmuuid:54ab8302-61c2-1f26-8433-802bd8dcc550, mmuuid:54ab8301-61c2-1f26-8433-802bd8dcc550, mmuuid:54ab8303-61c2-1f26-8433-802bd8dcc550, mmuuid:54ab8306-61c2-1f26-8433-802bd8dcc550, mmuuid:54ab8304-61c2-1f26-8433-802bd8dcc550, mmuuid:f5dad905-618c-1f26-8433-802bd8dcc550 AS TickerSymbol, mmuuid:f5dad901-618c-1f26-8433-802bd8dcc550, mmuuid:f401d347-618c-1f26-8433-802bd8dcc550 AS ProductName FROM mmuuid:54ab8300-61c2-1f26-8433-802bd8dcc550, mmuuid:f5dad900-618c-1f26-8433-802bd8dcc550, mmuuid:f401d342-618c-1f26-8433-802bd8dcc550 WHERE (mmuuid:54ab8303-61c2-1f26-8433-802bd8dcc550 = mmuuid:f5dad902-618c-1f26-8433-802bd8dcc550) AND (mmuuid:f5dad902-618c-1f26-8433-802bd8dcc550 = mmuuid:f4f5f742-618c-1f26-8433-802bd8dcc550)" insertSql="CREATE PROCEDURE&#xa;BEGIN&#xa;DECLARE string VARIABLES.VAR1;&#xa;VARIABLES.VAR1 = SELECT mmuuid:f5dad902-618c-1f26-8433-802bd8dcc550 FROM mmuuid:f5dad900-618c-1f26-8433-802bd8dcc550 WHERE mmuuid:f5dad905-618c-1f26-8433-802bd8dcc550 = Input.TickerSymbol;&#xa;IF(NOT (VARIABLES.VAR1 IS NULL))&#xa;BEGIN&#xa;DECLARE string VARIABLES.MAXTRAN;&#xa;DECLARE integer VARIABLES.MAXTRANNO;&#xa;DECLARE string VARIABLES.TRANNOSTR;&#xa;DECLARE string VARIABLES.ZEROS;&#xa;DECLARE string VARIABLES.NEWTRANID;&#xa;VARIABLES.MAXTRAN = SELECT MAX(mmuuid:54ab8302-61c2-1f26-8433-802bd8dcc550) FROM mmuuid:54ab8300-61c2-1f26-8433-802bd8dcc550;&#xa;VARIABLES.MAXTRANNO = convert(substring(VARIABLES.MAXTRAN, 3, (length(VARIABLES.MAXTRAN) - 3)), integer);&#xa;VARIABLES.MAXTRANNO = (VARIABLES.MAXTRANNO + 1);&#xa;VARIABLES.TRANNOSTR = convert(VARIABLES.MAXTRANNO, string);&#xa;VARIABLES.NEWTRANID = concat('TXT', lpad(VARIABLES.TRANNOSTR, 6, '0'));&#xa;IF(NOT ((INPUT.TranID IS NULL) AND (INPUT.AcctID IS NULL) AND (INPUT.PurchaseDate IS NULL) AND (INPUT.Shares IS NULL)))&#xa;BEGIN&#xa;VARIABLES.ROWS_UPDATED = INSERT INTO mmuuid:54ab8300-61c2-1f26-8433-802bd8dcc550 (mmuuid:54ab8302-61c2-1f26-8433-802bd8dcc550, mmuuid:54ab8301-61c2-1f26-8433-802bd8dcc550, mmuuid:54ab8303-61c2-1f26-8433-802bd8dcc550, mmuuid:54ab8306-61c2-1f26-8433-802bd8dcc550, mmuuid:54ab8304-61c2-1f26-8433-802bd8dcc550) VALUES (VARIABLES.NEWTRANID, INPUT.AcctID, VARIABLES.VAR1, INPUT.PurchaseDate, INPUT.Shares);&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;ERROR &quot;Non null values should be inserted into the elements AcctID, PurchaseDate, Shares&quot;;&#xa;END&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;ERROR &quot;TicketSymbol input was not found in the ProductSymbols table.&quot;;&#xa;END&#xa;END" updateSql="CREATE PROCEDURE&#xa;BEGIN&#xa;IF(HAS CRITERIA ON (mmuuid:52283440-6256-1f26-8433-802bd8dcc550, mmuuid:531c5845-6256-1f26-8433-802bd8dcc550))&#xa;BEGIN&#xa;DECLARE string VARIABLES.VAR1;&#xa;VARIABLES.VAR1 = SELECT mmuuid:f5dad902-618c-1f26-8433-802bd8dcc550 FROM mmuuid:f5dad900-618c-1f26-8433-802bd8dcc550 WHERE TRANSLATE = CRITERIA ON (mmuuid:531c5845-6256-1f26-8433-802bd8dcc550);&#xa;IF(VARIABLES.VAR1 IS NULL)&#xa;BEGIN&#xa;ERROR &quot;Input TickerSymbol not found in products list.&quot;;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;VARIABLES.ROWS_UPDATED = UPDATE mmuuid:54ab8300-61c2-1f26-8433-802bd8dcc550 SET mmuuid:54ab8304-61c2-1f26-8433-802bd8dcc550 = INPUT.Shares, mmuuid:54ab8306-61c2-1f26-8433-802bd8dcc550 = INPUT.PurchaseDate WHERE (mmuuid:54ab8303-61c2-1f26-8433-802bd8dcc550 = VARIABLES.VAR1) AND (TRANSLATE = CRITERIA ON (mmuuid:52283440-6256-1f26-8433-802bd8dcc550));&#xa;END&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;IF(HAS CRITERIA ON (mmuuid:51435283-6256-1f26-8433-802bd8dcc550))&#xa;BEGIN&#xa;DECLARE integer VARIABLES.VAR2;&#xa;VARIABLES.VAR2 = SELECT COUNT(*) FROM mmuuid:54ab8300-61c2-1f26-8433-802bd8dcc550 WHERE TRANSLATE = CRITERIA ON (mmuuid:51435283-6256-1f26-8433-802bd8dcc550);&#xa;IF(NOT (VARIABLES.VAR2 = 1))&#xa;BEGIN&#xa;ERROR &quot;Unable to locate specified transaction. No action taken.&quot;;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;VARIABLES.ROWS_UPDATED = UPDATE mmuuid:54ab8300-61c2-1f26-8433-802bd8dcc550 SET mmuuid:54ab8304-61c2-1f26-8433-802bd8dcc550 = INPUT.Shares, mmuuid:54ab8306-61c2-1f26-8433-802bd8dcc550 = INPUT.PurchaseDate WHERE TRANSLATE = CRITERIA ON (mmuuid:51435283-6256-1f26-8433-802bd8dcc550);&#xa;END&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;ERROR &quot;Update must either specify (AcctID and Ticker Symbol) OR (TranID)&quot;;&#xa;END&#xa;END&#xa;END" deleteSql="CREATE PROCEDURE&#xa;BEGIN&#xa;IF(HAS CRITERIA ON (mmuuid:52283440-6256-1f26-8433-802bd8dcc550, mmuuid:531c5845-6256-1f26-8433-802bd8dcc550))&#xa;BEGIN&#xa;DECLARE string VARIABLES.VAR1;&#xa;VARIABLES.VAR1 = SELECT mmuuid:f5dad902-618c-1f26-8433-802bd8dcc550 FROM mmuuid:f5dad900-618c-1f26-8433-802bd8dcc550 WHERE TRANSLATE = CRITERIA ON (mmuuid:531c5845-6256-1f26-8433-802bd8dcc550);&#xa;IF(VARIABLES.VAR1 IS NULL)&#xa;BEGIN&#xa;ERROR &quot;Input TickerSymbol not found in products list.&quot;;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;VARIABLES.ROWS_UPDATED = DELETE FROM mmuuid:54ab8300-61c2-1f26-8433-802bd8dcc550 WHERE (mmuuid:54ab8303-61c2-1f26-8433-802bd8dcc550 = VARIABLES.VAR1) AND (TRANSLATE = CRITERIA ON (mmuuid:52283440-6256-1f26-8433-802bd8dcc550));&#xa;END&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;IF(HAS CRITERIA ON (mmuuid:51435283-6256-1f26-8433-802bd8dcc550))&#xa;BEGIN&#xa;DECLARE integer VARIABLES.VAR2;&#xa;VARIABLES.VAR2 = SELECT COUNT(*) FROM mmuuid:54ab8300-61c2-1f26-8433-802bd8dcc550 WHERE TRANSLATE = CRITERIA ON (mmuuid:51435283-6256-1f26-8433-802bd8dcc550);&#xa;IF(NOT (VARIABLES.VAR2 = 1))&#xa;BEGIN&#xa;ERROR &quot;Unable to locate specified transaction. No action taken.&quot;;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;VARIABLES.ROWS_UPDATED = DELETE FROM mmuuid:54ab8300-61c2-1f26-8433-802bd8dcc550 WHERE TRANSLATE = CRITERIA ON (mmuuid:51435283-6256-1f26-8433-802bd8dcc550);&#xa;END&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;ERROR &quot;Delete must either specify (AcctID and Ticker Symbol) OR (TranID)&quot;;&#xa;END&#xa;END&#xa;END" insertSqlDefault="false" updateSqlDefault="false" deleteSqlDefault="false">
        <nested xsi:type="Transformation:SqlTransformation" xmi:uuid="mmuuid:7617e943-61d9-1f26-8433-802bd8dcc550" selectSql="SELECT TranID, AcctID, InstrID, PurchaseDate, Shares, Symbol AS TickerSymbol, CUSIP, Name AS ProductName FROM CustomerAccounts.AccountHoldings, Products.ProductSymbols, Products.ProductData WHERE (InstrID = Products.ProductSymbols.Instr_ID) AND (Products.ProductSymbols.Instr_ID = Products.ProductData.Instr_ID)" insertSql="CREATE PROCEDURE&#xa;BEGIN&#xa;DECLARE string VARIABLES.VAR1;&#xa;VARIABLES.VAR1 = SELECT Products.ProductSymbols.Instr_ID FROM Products.ProductSymbols WHERE Products.ProductSymbols.Symbol = Input.TickerSymbol;&#xa;IF(NOT (VARIABLES.VAR1 IS NULL))&#xa;BEGIN&#xa;DECLARE string VARIABLES.MAXTRAN;&#xa;DECLARE integer VARIABLES.MAXTRANNO;&#xa;DECLARE string VARIABLES.TRANNOSTR;&#xa;DECLARE string VARIABLES.ZEROS;&#xa;DECLARE string VARIABLES.NEWTRANID;&#xa;VARIABLES.MAXTRAN = SELECT MAX(TranID) FROM CustomerAccounts.AccountHoldings;&#xa;VARIABLES.MAXTRANNO = convert(substring(VARIABLES.MAXTRAN, 3, (length(VARIABLES.MAXTRAN) - 3)), integer);&#xa;VARIABLES.MAXTRANNO = (VARIABLES.MAXTRANNO + 1);&#xa;VARIABLES.TRANNOSTR = convert(VARIABLES.MAXTRANNO, string);&#xa;VARIABLES.NEWTRANID = concat('TXT', lpad(VARIABLES.TRANNOSTR, 6, '0'));&#xa;IF(NOT ((INPUT.TranID IS NULL) AND (INPUT.AcctID IS NULL) AND (INPUT.PurchaseDate IS NULL) AND (INPUT.Shares IS NULL)))&#xa;BEGIN&#xa;VARIABLES.ROWS_UPDATED = INSERT INTO CustomerAccounts.AccountHoldings (CustomerAccounts.AccountHoldings.TranID, CustomerAccounts.AccountHoldings.AcctID, CustomerAccounts.AccountHoldings.InstrID, CustomerAccounts.AccountHoldings.PurchaseDate, CustomerAccounts.AccountHoldings.Shares) VALUES (VARIABLES.NEWTRANID, INPUT.AcctID, VARIABLES.VAR1, INPUT.PurchaseDate, INPUT.Shares);&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;ERROR &quot;Non null values should be inserted into the elements AcctID, PurchaseDate, Shares&quot;;&#xa;END&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;ERROR &quot;TicketSymbol input was not found in the ProductSymbols table.&quot;;&#xa;END&#xa;END" updateSql="CREATE PROCEDURE&#xa;BEGIN&#xa;IF(HAS CRITERIA ON (Updates.UpdateTransaction.AcctID, Updates.UpdateTransaction.TickerSymbol))&#xa;BEGIN&#xa;DECLARE string VARIABLES.VAR1;&#xa;VARIABLES.VAR1 = SELECT Products.ProductSymbols.Instr_ID FROM Products.ProductSymbols WHERE TRANSLATE = CRITERIA ON (Updates.UpdateTransaction.TickerSymbol);&#xa;IF(VARIABLES.VAR1 IS NULL)&#xa;BEGIN&#xa;ERROR &quot;Input TickerSymbol not found in products list.&quot;;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;VARIABLES.ROWS_UPDATED = UPDATE CustomerAccounts.AccountHoldings SET CustomerAccounts.AccountHoldings.Shares = INPUT.Shares, CustomerAccounts.AccountHoldings.PurchaseDate = INPUT.PurchaseDate WHERE (CustomerAccounts.AccountHoldings.InstrID = VARIABLES.VAR1) AND (TRANSLATE = CRITERIA ON (Updates.UpdateTransaction.AcctID));&#xa;END&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;IF(HAS CRITERIA ON (Updates.UpdateTransaction.TranID))&#xa;BEGIN&#xa;DECLARE integer VARIABLES.VAR2;&#xa;VARIABLES.VAR2 = SELECT COUNT(*) FROM CustomerAccounts.AccountHoldings WHERE TRANSLATE = CRITERIA ON (Updates.UpdateTransaction.TranID);&#xa;IF(NOT (VARIABLES.VAR2 = 1))&#xa;BEGIN&#xa;ERROR &quot;Unable to locate specified transaction. No action taken.&quot;;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;VARIABLES.ROWS_UPDATED = UPDATE CustomerAccounts.AccountHoldings SET CustomerAccounts.AccountHoldings.Shares = INPUT.Shares, CustomerAccounts.AccountHoldings.PurchaseDate = INPUT.PurchaseDate WHERE TRANSLATE = CRITERIA ON (Updates.UpdateTransaction.TranID);&#xa;END&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;ERROR &quot;Update must either specify (AcctID and Ticker Symbol) OR (TranID)&quot;;&#xa;END&#xa;END&#xa;END" deleteSql="CREATE PROCEDURE&#xa;BEGIN&#xa;IF(HAS CRITERIA ON (Updates.UpdateTransaction.AcctID, Updates.UpdateTransaction.TickerSymbol))&#xa;BEGIN&#xa;DECLARE string VARIABLES.VAR1;&#xa;VARIABLES.VAR1 = SELECT Products.ProductSymbols.Instr_ID FROM Products.ProductSymbols WHERE TRANSLATE = CRITERIA ON (Updates.UpdateTransaction.TickerSymbol);&#xa;IF(VARIABLES.VAR1 IS NULL)&#xa;BEGIN&#xa;ERROR &quot;Input TickerSymbol not found in products list.&quot;;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;VARIABLES.ROWS_UPDATED = DELETE FROM CustomerAccounts.AccountHoldings WHERE (CustomerAccounts.AccountHoldings.InstrID = VARIABLES.VAR1) AND (TRANSLATE = CRITERIA ON (Updates.UpdateTransaction.AcctID));&#xa;END&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;IF(HAS CRITERIA ON (Updates.UpdateTransaction.TranID))&#xa;BEGIN&#xa;DECLARE integer VARIABLES.VAR2;&#xa;VARIABLES.VAR2 = SELECT COUNT(*) FROM CustomerAccounts.AccountHoldings WHERE TRANSLATE = CRITERIA ON (Updates.UpdateTransaction.TranID);&#xa;IF(NOT (VARIABLES.VAR2 = 1))&#xa;BEGIN&#xa;ERROR &quot;Unable to locate specified transaction. No action taken.&quot;;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;VARIABLES.ROWS_UPDATED = DELETE FROM CustomerAccounts.AccountHoldings WHERE TRANSLATE = CRITERIA ON (Updates.UpdateTransaction.TranID);&#xa;END&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;ERROR &quot;Delete must either specify (AcctID and Ticker Symbol) OR (TranID)&quot;;&#xa;END&#xa;END&#xa;END" insertSqlDefault="false" updateSqlDefault="false" deleteSqlDefault="false"/>
        <aliases xmi:uuid="mmuuid:51435280-6256-1f26-8433-802bd8dcc550" alias="PRODUCTDATA">
          <aliasedObject href="Products.xmi#mmuuid/f401d342-618c-1f26-8433-802bd8dcc550"/>
        </aliases>
        <aliases xmi:uuid="mmuuid:51435281-6256-1f26-8433-802bd8dcc550" alias="ACCOUNTHOLDINGS">
          <aliasedObject href="CustomerAccounts.xmi#mmuuid/54ab8300-61c2-1f26-8433-802bd8dcc550"/>
        </aliases>
        <aliases xmi:uuid="mmuuid:51435282-6256-1f26-8433-802bd8dcc550" alias="PRODUCTSYMBOLS">
          <aliasedObject href="Products.xmi#mmuuid/f5dad900-618c-1f26-8433-802bd8dcc550"/>
        </aliases>
      </helper>
      <nested outputs="mmuuid/51435283-6256-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/54ab8302-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/52283440-6256-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/54ab8301-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/52283445-6256-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/54ab8303-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/5228344a-6256-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/54ab8306-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/531c5840-6256-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/54ab8304-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/531c5845-6256-1f26-8433-802bd8dcc550">
        <inputs href="Products.xmi#mmuuid/f5dad905-618c-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/531c584a-6256-1f26-8433-802bd8dcc550">
        <inputs href="Products.xmi#mmuuid/f5dad901-618c-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/54107c40-6256-1f26-8433-802bd8dcc550">
        <inputs href="Products.xmi#mmuuid/f401d347-618c-1f26-8433-802bd8dcc550"/>
      </nested>
      <inputs href="Products.xmi#mmuuid/f401d342-618c-1f26-8433-802bd8dcc550"/>
      <inputs href="CustomerAccounts.xmi#mmuuid/54ab8300-61c2-1f26-8433-802bd8dcc550"/>
      <inputs href="Products.xmi#mmuuid/f5dad900-618c-1f26-8433-802bd8dcc550"/>
    </transformationMappings>
    <transformationMappings xsi:type="Transformation:SqlTransformationMappingRoot" xmi:uuid="mmuuid:772b1180-61da-1f26-8433-802bd8dcc550" outputs="mmuuid/408f85c0-61d5-1f26-8433-802bd8dcc550" target="mmuuid/408f85c0-61d5-1f26-8433-802bd8dcc550">
      <helper xsi:type="Transformation:SqlTransformation" xmi:uuid="mmuuid:780ff340-61da-1f26-8433-802bd8dcc550" selectSql="SELECT mmuuid:568488cb-61c2-1f26-8433-802bd8dcc550, mmuuid:568488c7-61c2-1f26-8433-802bd8dcc550, mmuuid:568488c8-61c2-1f26-8433-802bd8dcc550, mmuuid:568488c2-61c2-1f26-8433-802bd8dcc550, mmuuid:568488c4-61c2-1f26-8433-802bd8dcc550, mmuuid:568488c6-61c2-1f26-8433-802bd8dcc550, mmuuid:568488c5-61c2-1f26-8433-802bd8dcc550, mmuuid:568488c3-61c2-1f26-8433-802bd8dcc550, mmuuid:568488ca-61c2-1f26-8433-802bd8dcc550, mmuuid:568488cc-61c2-1f26-8433-802bd8dcc550, mmuuid:568488c9-61c2-1f26-8433-802bd8dcc550, mmuuid:53b75f03-61c2-1f26-8433-802bd8dcc550, mmuuid:53b75f06-61c2-1f26-8433-802bd8dcc550 AS AccountType, mmuuid:53b75f04-61c2-1f26-8433-802bd8dcc550, mmuuid:53b75f07-61c2-1f26-8433-802bd8dcc550, mmuuid:53b75f09-61c2-1f26-8433-802bd8dcc550 FROM mmuuid:568488c0-61c2-1f26-8433-802bd8dcc550, mmuuid:53b75f02-61c2-1f26-8433-802bd8dcc550 WHERE mmuuid:568488cb-61c2-1f26-8433-802bd8dcc550 = mmuuid:53b75f08-61c2-1f26-8433-802bd8dcc550" insertSql="CREATE PROCEDURE&#xa;BEGIN&#xa;IF((INPUT.AcctID IS NULL) OR (INPUT.CustID IS NULL) OR (INPUT.FirstName IS NULL) OR (INPUT.LastName IS NULL) OR (INPUT.Address1 IS NULL) OR (INPUT.PostalCode IS NULL))&#xa;BEGIN&#xa;ERROR &quot;Null values can not be inserted in any of the following columns: AcctID, CustID, FirstName, LastName, Address1, PostalCode&quot;;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;INSERT INTO mmuuid:53b75f02-61c2-1f26-8433-802bd8dcc550 (mmuuid:53b75f03-61c2-1f26-8433-802bd8dcc550, mmuuid:53b75f08-61c2-1f26-8433-802bd8dcc550, mmuuid:53b75f06-61c2-1f26-8433-802bd8dcc550, mmuuid:53b75f04-61c2-1f26-8433-802bd8dcc550, mmuuid:53b75f07-61c2-1f26-8433-802bd8dcc550, mmuuid:53b75f09-61c2-1f26-8433-802bd8dcc550) VALUES (INPUT.AcctID, INPUT.CustID, INPUT.AccountType, INPUT.Status, INPUT.DateOpened, INPUT.DateClosed);&#xa;VARIABLES.ROWS_UPDATED = INSERT INTO mmuuid:568488c0-61c2-1f26-8433-802bd8dcc550 (mmuuid:568488cb-61c2-1f26-8433-802bd8dcc550, mmuuid:568488c7-61c2-1f26-8433-802bd8dcc550, mmuuid:568488c8-61c2-1f26-8433-802bd8dcc550, mmuuid:568488c2-61c2-1f26-8433-802bd8dcc550, mmuuid:568488c4-61c2-1f26-8433-802bd8dcc550, mmuuid:568488c6-61c2-1f26-8433-802bd8dcc550, mmuuid:568488c5-61c2-1f26-8433-802bd8dcc550, mmuuid:568488c3-61c2-1f26-8433-802bd8dcc550, mmuuid:568488ca-61c2-1f26-8433-802bd8dcc550, mmuuid:568488cc-61c2-1f26-8433-802bd8dcc550, mmuuid:568488c9-61c2-1f26-8433-802bd8dcc550) VALUES (INPUT.CustID, INPUT.FirstName, INPUT.LastName, INPUT.MiddleName, INPUT.Address1, INPUT.Address2, INPUT.City, INPUT.StateProvince, INPUT.PostalCode, INPUT.Country, INPUT.Phone);&#xa;END&#xa;END" updateSql="CREATE PROCEDURE&#xa;BEGIN&#xa;DECLARE integer VARIABLES.COUNTER1;&#xa;DECLARE integer VARIABLES.COUNTER2;&#xa;DECLARE string VARIABLES.ACCTCUSTID;&#xa;IF((CHANGING.AcctID = 'true') OR (CHANGING.CustID = 'true') OR (CHANGING.LastName = 'true'))&#xa;BEGIN&#xa;ERROR &quot;User may not change Account ID, Customer ID, or Customer last name.&quot;;&#xa;END&#xa;IF(HAS CRITERIA ON (mmuuid:1b58e4c1-6245-1f26-8433-802bd8dcc550, mmuuid:1c4d08c5-6245-1f26-8433-802bd8dcc550))&#xa;BEGIN&#xa;VARIABLES.ACCTCUSTID = SELECT mmuuid:568488cb-61c2-1f26-8433-802bd8dcc550 FROM mmuuid:568488c0-61c2-1f26-8433-802bd8dcc550 WHERE TRANSLATE CRITERIA ON (mmuuid:1b58e4c1-6245-1f26-8433-802bd8dcc550);&#xa;VARIABLES.COUNTER1 = UPDATE mmuuid:53b75f02-61c2-1f26-8433-802bd8dcc550 SET mmuuid:53b75f06-61c2-1f26-8433-802bd8dcc550 = INPUT.AccountType, mmuuid:53b75f04-61c2-1f26-8433-802bd8dcc550 = INPUT.Status, mmuuid:53b75f07-61c2-1f26-8433-802bd8dcc550 = INPUT.DateOpened, mmuuid:53b75f09-61c2-1f26-8433-802bd8dcc550 = INPUT.DateClosed WHERE mmuuid:53b75f08-61c2-1f26-8433-802bd8dcc550 = VARIABLES.ACCTCUSTID;&#xa;VARIABLES.COUNTER2 = UPDATE mmuuid:568488c0-61c2-1f26-8433-802bd8dcc550 SET mmuuid:568488c7-61c2-1f26-8433-802bd8dcc550 = INPUT.FirstName, mmuuid:568488c2-61c2-1f26-8433-802bd8dcc550 = INPUT.MiddleName, mmuuid:568488c4-61c2-1f26-8433-802bd8dcc550 = INPUT.Address1, mmuuid:568488c6-61c2-1f26-8433-802bd8dcc550 = INPUT.Address2, mmuuid:568488c5-61c2-1f26-8433-802bd8dcc550 = INPUT.City, mmuuid:568488c3-61c2-1f26-8433-802bd8dcc550 = INPUT.StateProvince, mmuuid:568488ca-61c2-1f26-8433-802bd8dcc550 = INPUT.PostalCode, mmuuid:568488cc-61c2-1f26-8433-802bd8dcc550 = INPUT.Country, mmuuid:568488c9-61c2-1f26-8433-802bd8dcc550 = INPUT.Phone WHERE TRANSLATE CRITERIA ON (mmuuid:1b58e4c1-6245-1f26-8433-802bd8dcc550, mmuuid:1c4d08c5-6245-1f26-8433-802bd8dcc550);&#xa;IF((VARIABLES.COUNTER1 = 1) OR (VARIABLES.COUNTER2 = 1))&#xa;BEGIN&#xa;VARIABLES.ROWS_UPDATED = 1;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;VARIABLES.ROWS_UPDATED = 0;&#xa;END&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;ERROR &quot;User must provide Customer ID and Last Name to update records.&quot;;&#xa;END&#xa;END" deleteSql="CREATE PROCEDURE&#xa;BEGIN&#xa;DECLARE string VARIABLES.ACCTCUSTID;&#xa;IF(HAS CRITERIA ON (mmuuid:1b58e4c1-6245-1f26-8433-802bd8dcc550, mmuuid:1c4d08c5-6245-1f26-8433-802bd8dcc550))&#xa;BEGIN&#xa;VARIABLES.ACCTCUSTID = SELECT mmuuid:568488cb-61c2-1f26-8433-802bd8dcc550 FROM mmuuid:568488c0-61c2-1f26-8433-802bd8dcc550 WHERE TRANSLATE = CRITERIA ON (mmuuid:1b58e4c1-6245-1f26-8433-802bd8dcc550);&#xa;DELETE FROM mmuuid:53b75f02-61c2-1f26-8433-802bd8dcc550 WHERE mmuuid:53b75f08-61c2-1f26-8433-802bd8dcc550 = VARIABLES.ACCTCUSTID;&#xa;VARIABLES.ROWS_UPDATED = DELETE FROM mmuuid:568488c0-61c2-1f26-8433-802bd8dcc550 WHERE TRANSLATE = CRITERIA ON (mmuuid:1b58e4c1-6245-1f26-8433-802bd8dcc550, mmuuid:1c4d08c5-6245-1f26-8433-802bd8dcc550);&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;ERROR &quot;User must provide Customer ID and Last Name to delete records.&quot;;&#xa;END&#xa;END" insertSqlDefault="false" updateSqlDefault="false" deleteSqlDefault="false">
        <nested xsi:type="Transformation:SqlTransformation" xmi:uuid="mmuuid:780ff341-61da-1f26-8433-802bd8dcc550" selectSql="SELECT CustomerAccounts.Customer.CustID, FirstName, LastName, MiddleName, Address1, Address2, City, StateProvince, PostalCode, Country, Phone, AcctID, Type AS AccountType, Status, DateOpened, DateClosed FROM CustomerAccounts.Customer, CustomerAccounts.Account WHERE CustomerAccounts.Customer.CustID = CustomerAccounts.Account.CustID" insertSql="CREATE PROCEDURE&#xa;BEGIN&#xa;IF((INPUT.AcctID IS NULL) OR (INPUT.CustID IS NULL) OR (INPUT.FirstName IS NULL) OR (INPUT.LastName IS NULL) OR (INPUT.Address1 IS NULL) OR (INPUT.PostalCode IS NULL))&#xa;BEGIN&#xa;ERROR &quot;Null values can not be inserted in any of the following columns: AcctID, CustID, FirstName, LastName, Address1, PostalCode&quot;;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;INSERT INTO CustomerAccounts.Account (AcctID, CustID, Type, Status, DateOpened, DateClosed) VALUES (INPUT.AcctID, INPUT.CustID, INPUT.AccountType, INPUT.Status, INPUT.DateOpened, INPUT.DateClosed);&#xa;ROWS_UPDATED = INSERT INTO CustomerAccounts.Customer (CustID, FirstName, LastName, MiddleName, Address1, Address2, City, StateProvince, PostalCode, Country, Phone) VALUES (INPUT.CustID, INPUT.FirstName, INPUT.LastName, INPUT.MiddleName, INPUT.Address1, INPUT.Address2, INPUT.City, INPUT.StateProvince, INPUT.PostalCode, INPUT.Country, INPUT.Phone);&#xa;END&#xa;END" updateSql="CREATE PROCEDURE&#xa;BEGIN&#xa;DECLARE integer VARIABLES.COUNTER1;&#xa;DECLARE integer VARIABLES.COUNTER2;&#xa;DECLARE string VARIABLES.ACCTCUSTID;&#xa;IF((CHANGING.AcctID = 'true') OR (CHANGING.CustID = 'true') OR (CHANGING.LastName = 'true'))&#xa;BEGIN&#xa;ERROR &quot;User may not change Account ID, Customer ID, or Customer last name.&quot;;&#xa;END&#xa;IF(HAS CRITERIA ON (Updates.UpdateAccount.CustID, Updates.UpdateAccount.LastName))&#xa;BEGIN&#xa;VARIABLES.ACCTCUSTID = SELECT CustomerAccounts.Customer.CustID FROM CustomerAccounts.Customer WHERE TRANSLATE CRITERIA ON (Updates.UpdateAccount.CustID);&#xa;VARIABLES.COUNTER1 = UPDATE CustomerAccounts.Account SET CustomerAccounts.Account.Type = INPUT.AccountType, CustomerAccounts.Account.Status = INPUT.Status, CustomerAccounts.Account.DateOpened = INPUT.DateOpened, CustomerAccounts.Account.DateClosed = INPUT.DateClosed WHERE CustomerAccounts.Account.CustID = VARIABLES.ACCTCUSTID;&#xa;VARIABLES.COUNTER2 = UPDATE CustomerAccounts.Customer SET CustomerAccounts.Customer.FirstName = INPUT.FirstName, CustomerAccounts.Customer.MiddleName = INPUT.MiddleName, CustomerAccounts.Customer.Address1 = INPUT.Address1, CustomerAccounts.Customer.Address2 = INPUT.Address2, CustomerAccounts.Customer.City = INPUT.City, CustomerAccounts.Customer.StateProvince = INPUT.StateProvince, CustomerAccounts.Customer.PostalCode = INPUT.PostalCode, CustomerAccounts.Customer.Country = INPUT.Country, CustomerAccounts.Customer.Phone = INPUT.Phone WHERE TRANSLATE CRITERIA ON (Updates.UpdateAccount.CustID, Updates.UpdateAccount.LastName);&#xa;IF((VARIABLES.COUNTER1 = 1) OR (VARIABLES.COUNTER2 = 1))&#xa;BEGIN&#xa;VARIABLES.ROWS_UPDATED = 1;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;VARIABLES.ROWS_UPDATED = 0;&#xa;END&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;ERROR &quot;User must provide Customer ID and Last Name to update records.&quot;;&#xa;END&#xa;END" deleteSql="CREATE PROCEDURE&#xa;BEGIN&#xa;DECLARE string VARIABLES.ACCTCUSTID;&#xa;IF(HAS CRITERIA ON (Updates.UpdateAccount.CustID, Updates.UpdateAccount.LastName))&#xa;BEGIN&#xa;VARIABLES.ACCTCUSTID = SELECT CustomerAccounts.Customer.CustID FROM CustomerAccounts.Customer WHERE TRANSLATE = CRITERIA ON (Updates.UpdateAccount.CustID);&#xa;DELETE FROM CustomerAccounts.Account WHERE CustomerAccounts.Account.CustID = VARIABLES.ACCTCUSTID;&#xa;VARIABLES.ROWS_UPDATED = DELETE FROM CustomerAccounts.Customer WHERE TRANSLATE = CRITERIA ON (Updates.UpdateAccount.CustID, Updates.UpdateAccount.LastName);&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;ERROR &quot;User must provide Customer ID and Last Name to delete records.&quot;;&#xa;END&#xa;END" insertSqlDefault="false" updateSqlDefault="false" deleteSqlDefault="false"/>
        <aliases xmi:uuid="mmuuid:1a740301-6245-1f26-8433-802bd8dcc550" alias="CUSTOMER">
          <aliasedObject href="CustomerAccounts.xmi#mmuuid/568488c0-61c2-1f26-8433-802bd8dcc550"/>
        </aliases>
        <aliases xmi:uuid="mmuuid:1b58e4c0-6245-1f26-8433-802bd8dcc550" alias="ACCOUNT">
          <aliasedObject href="CustomerAccounts.xmi#mmuuid/53b75f02-61c2-1f26-8433-802bd8dcc550"/>
        </aliases>
      </helper>
      <nested outputs="mmuuid/1b58e4c1-6245-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/568488cb-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/1c4d08c0-6245-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/568488c7-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/1c4d08c5-6245-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/568488c8-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/1c4d08ca-6245-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/568488c2-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/1d31ea84-6245-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/568488c4-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/1d31ea89-6245-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/568488c6-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/1e260e80-6245-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/568488c5-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/1e260e85-6245-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/568488c3-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/1f1a3280-6245-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/568488ca-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/1f1a3285-6245-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/568488cc-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/1f1a328a-6245-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/568488c9-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/1fff1440-6245-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/53b75f03-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/1fff1445-6245-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/53b75f06-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/1fff144a-6245-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/53b75f04-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/20f33840-6245-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/53b75f07-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/20f33845-6245-1f26-8433-802bd8dcc550">
        <inputs href="CustomerAccounts.xmi#mmuuid/53b75f09-61c2-1f26-8433-802bd8dcc550"/>
      </nested>
      <inputs href="CustomerAccounts.xmi#mmuuid/568488c0-61c2-1f26-8433-802bd8dcc550"/>
      <inputs href="CustomerAccounts.xmi#mmuuid/53b75f02-61c2-1f26-8433-802bd8dcc550"/>
    </transformationMappings>
    <transformationMappings xsi:type="Transformation:SqlTransformationMappingRoot" xmi:uuid="mmuuid:69484500-61db-1f26-8433-802bd8dcc550" outputs="mmuuid/d35c6c40-61d2-1f26-8433-802bd8dcc550" target="mmuuid/d35c6c40-61d2-1f26-8433-802bd8dcc550">
      <helper xsi:type="Transformation:SqlTransformation" xmi:uuid="mmuuid:69484501-61db-1f26-8433-802bd8dcc550" selectSql="SELECT mmuuid:f5dad902-618c-1f26-8433-802bd8dcc550, mmuuid:f5dad906-618c-1f26-8433-802bd8dcc550, mmuuid:f5dad905-618c-1f26-8433-802bd8dcc550, mmuuid:f5dad901-618c-1f26-8433-802bd8dcc550, mmuuid:f401d347-618c-1f26-8433-802bd8dcc550, mmuuid:f401d34a-618c-1f26-8433-802bd8dcc550, mmuuid:f401d346-618c-1f26-8433-802bd8dcc550, mmuuid:f401d349-618c-1f26-8433-802bd8dcc550, mmuuid:f401d343-618c-1f26-8433-802bd8dcc550, mmuuid:f401d344-618c-1f26-8433-802bd8dcc550, mmuuid:f4f5f740-618c-1f26-8433-802bd8dcc550, mmuuid:f401d345-618c-1f26-8433-802bd8dcc550, mmuuid:f401d348-618c-1f26-8433-802bd8dcc550 FROM mmuuid:f5dad900-618c-1f26-8433-802bd8dcc550, mmuuid:f401d342-618c-1f26-8433-802bd8dcc550 WHERE mmuuid:f5dad902-618c-1f26-8433-802bd8dcc550 = mmuuid:f4f5f742-618c-1f26-8433-802bd8dcc550" insertSql="CREATE PROCEDURE&#xa;BEGIN&#xa;DECLARE integer VARIABLES.KOUNT;&#xa;IF((INPUT.Instr_ID IS NULL) OR (INPUT.ISDJI IS NULL) OR (INPUT.ISSP500 IS NULL) OR (INPUT.ISAMEXINT IS NULL) OR (INPUT.ISNAS100 IS NULL) OR (INPUT.Symbol IS NULL) OR (input.name IS NULL))&#xa;BEGIN&#xa;ERROR &quot;The following elements Instr_ID, ISDJI, ISSP500, ISAMEXINT, ISNAS100, Symbol, and Name are not nullable, non-null values should be inserted for these elements.&quot;;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;VARIABLES.KOUNT = SELECT COUNT(*) FROM mmuuid:f5dad900-618c-1f26-8433-802bd8dcc550 WHERE mmuuid:f5dad905-618c-1f26-8433-802bd8dcc550 = input.symbol;&#xa;IF(VARIABLES.KOUNT > 0)&#xa;BEGIN&#xa;ERROR &quot;Specified symbol already exists in database - Choose another symbol to insert.&quot;;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;VARIABLES.KOUNT = SELECT COUNT(*) FROM mmuuid:f401d342-618c-1f26-8433-802bd8dcc550 WHERE mmuuid:f4f5f742-618c-1f26-8433-802bd8dcc550 = input.instr_id;&#xa;IF(VARIABLES.KOUNT > 0)&#xa;BEGIN&#xa;ERROR &quot;Specified instrument ID already exists in database - Choose another Instr_ID to insert.&quot;;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;VARIABLES.KOUNT = SELECT COUNT(*) FROM mmuuid:f401d342-618c-1f26-8433-802bd8dcc550 WHERE mmuuid:f401d347-618c-1f26-8433-802bd8dcc550 = input.name;&#xa;IF(VARIABLES.KOUNT > 0)&#xa;BEGIN&#xa;ERROR &quot;Specified Name already exists in database - Choose another Name to insert.&quot;;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;INSERT INTO mmuuid:f401d342-618c-1f26-8433-802bd8dcc550 (mmuuid:f4f5f742-618c-1f26-8433-802bd8dcc550, mmuuid:f401d347-618c-1f26-8433-802bd8dcc550, mmuuid:f401d34a-618c-1f26-8433-802bd8dcc550, mmuuid:f401d346-618c-1f26-8433-802bd8dcc550, mmuuid:f401d349-618c-1f26-8433-802bd8dcc550, mmuuid:f401d343-618c-1f26-8433-802bd8dcc550, mmuuid:f401d344-618c-1f26-8433-802bd8dcc550, mmuuid:f4f5f740-618c-1f26-8433-802bd8dcc550, mmuuid:f401d345-618c-1f26-8433-802bd8dcc550, mmuuid:f401d348-618c-1f26-8433-802bd8dcc550) VALUES (INPUT.Instr_ID, INPUT.Name, INPUT.Type, INPUT.Issuer, INPUT.Exchange, INPUT.ISDJI, INPUT.ISSP500, INPUT.ISNAS100, INPUT.ISAMEXINT, INPUT.PriBusiness);&#xa;VARIABLES.ROWS_UPDATED = INSERT INTO mmuuid:f5dad900-618c-1f26-8433-802bd8dcc550 (mmuuid:f5dad902-618c-1f26-8433-802bd8dcc550, mmuuid:f5dad906-618c-1f26-8433-802bd8dcc550, mmuuid:f5dad905-618c-1f26-8433-802bd8dcc550, mmuuid:f5dad901-618c-1f26-8433-802bd8dcc550) VALUES (INPUT.Instr_ID, INPUT.Symbol_Type, INPUT.Symbol, INPUT.CUSIP);&#xa;END&#xa;END&#xa;END&#xa;END&#xa;END" updateSql="CREATE PROCEDURE&#xa;BEGIN&#xa;IF(HAS CRITERIA ON (mmuuid:ec94858b-6231-1f26-8433-802bd8dcc550, mmuuid:ec948581-6231-1f26-8433-802bd8dcc550))&#xa;BEGIN&#xa;UPDATE mmuuid:f401d342-618c-1f26-8433-802bd8dcc550 SET mmuuid:f401d347-618c-1f26-8433-802bd8dcc550 = INPUT.Name, mmuuid:f401d34a-618c-1f26-8433-802bd8dcc550 = INPUT.Type, mmuuid:f401d346-618c-1f26-8433-802bd8dcc550 = INPUT.Issuer, mmuuid:f401d349-618c-1f26-8433-802bd8dcc550 = INPUT.Exchange, mmuuid:f401d345-618c-1f26-8433-802bd8dcc550 = INPUT.ISAMEXINT, mmuuid:f401d348-618c-1f26-8433-802bd8dcc550 = INPUT.PriBusiness WHERE TRANSLATE = CRITERIA ON (mmuuid:ec94858b-6231-1f26-8433-802bd8dcc550);&#xa;VARIABLES.ROWS_UPDATED = UPDATE mmuuid:f5dad900-618c-1f26-8433-802bd8dcc550 SET mmuuid:f5dad902-618c-1f26-8433-802bd8dcc550 = INPUT.Instr_ID, mmuuid:f5dad906-618c-1f26-8433-802bd8dcc550 = INPUT.Symbol_Type, mmuuid:f5dad905-618c-1f26-8433-802bd8dcc550 = INPUT.Symbol, mmuuid:f5dad901-618c-1f26-8433-802bd8dcc550 = INPUT.CUSIP WHERE TRANSLATE = CRITERIA ON (mmuuid:ec948581-6231-1f26-8433-802bd8dcc550);&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;ERROR &quot;User must supply product name and symbol.&quot;;&#xa;END&#xa;END" deleteSql="CREATE PROCEDURE&#xa;BEGIN&#xa;DECLARE string VARIABLES.I_ID;&#xa;IF(HAS CRITERIA ON (mmuuid:ec94858b-6231-1f26-8433-802bd8dcc550))&#xa;BEGIN&#xa;VARIABLES.I_ID = SELECT mmuuid:f4f5f742-618c-1f26-8433-802bd8dcc550 FROM mmuuid:f401d342-618c-1f26-8433-802bd8dcc550 WHERE TRANSLATE CRITERIA ON (mmuuid:ec94858b-6231-1f26-8433-802bd8dcc550);&#xa;VARIABLES.ROWS_UPDATED = DELETE FROM mmuuid:f401d342-618c-1f26-8433-802bd8dcc550 WHERE mmuuid:f4f5f742-618c-1f26-8433-802bd8dcc550 = VARIABLES.I_ID;&#xa;DELETE FROM mmuuid:f5dad900-618c-1f26-8433-802bd8dcc550 WHERE mmuuid:f5dad902-618c-1f26-8433-802bd8dcc550 = VARIABLES.I_ID;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;IF(HAS CRITERIA ON (mmuuid:eba06181-6231-1f26-8433-802bd8dcc550))&#xa;BEGIN&#xa;VARIABLES.I_ID = SELECT mmuuid:f5dad902-618c-1f26-8433-802bd8dcc550 FROM mmuuid:f5dad900-618c-1f26-8433-802bd8dcc550 WHERE TRANSLATE CRITERIA ON (mmuuid:eba06181-6231-1f26-8433-802bd8dcc550);&#xa;VARIABLES.ROWS_UPDATED = DELETE FROM mmuuid:f5dad900-618c-1f26-8433-802bd8dcc550 WHERE TRANSLATE CRITERIA ON (mmuuid:eba06181-6231-1f26-8433-802bd8dcc550);&#xa;DELETE FROM mmuuid:f401d342-618c-1f26-8433-802bd8dcc550 WHERE mmuuid:f4f5f742-618c-1f26-8433-802bd8dcc550 = VARIABLES.I_ID;&#xa;END&#xa;END&#xa;END" insertSqlDefault="false" updateSqlDefault="false" deleteSqlDefault="false">
        <nested xsi:type="Transformation:SqlTransformation" xmi:uuid="mmuuid:69484502-61db-1f26-8433-802bd8dcc550" selectSql="SELECT Products.ProductSymbols.Instr_ID, Symbol_Type, Symbol, CUSIP, Name, Type, Issuer, Exchange, ISDJI, ISSP500, ISNAS100, ISAMEXINT, PriBusiness FROM Products.ProductSymbols, Products.ProductData WHERE Products.ProductSymbols.Instr_ID = Products.ProductData.Instr_ID" insertSql="CREATE PROCEDURE&#xa;BEGIN&#xa;DECLARE integer VARIABLES.KOUNT;&#xa;IF((INPUT.Instr_ID IS NULL) OR (INPUT.ISDJI IS NULL) OR (INPUT.ISSP500 IS NULL) OR (INPUT.ISAMEXINT IS NULL) OR (INPUT.ISNAS100 IS NULL) OR (INPUT.Symbol IS NULL) OR (input.name IS NULL))&#xa;BEGIN&#xa;ERROR &quot;The following elements Instr_ID, ISDJI, ISSP500, ISAMEXINT, ISNAS100, Symbol, and Name are not nullable, non-null values should be inserted for these elements.&quot;;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;VARIABLES.KOUNT = SELECT COUNT(*) FROM Products.ProductSymbols WHERE Products.ProductSymbols.Symbol = input.symbol;&#xa;IF(VARIABLES.KOUNT > 0)&#xa;BEGIN&#xa;ERROR &quot;Specified symbol already exists in database - Choose another symbol to insert.&quot;;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;VARIABLES.KOUNT = SELECT COUNT(*) FROM Products.ProductData WHERE Products.ProductData.Instr_ID = input.instr_id;&#xa;IF(VARIABLES.KOUNT > 0)&#xa;BEGIN&#xa;ERROR &quot;Specified instrument ID already exists in database - Choose another Instr_ID to insert.&quot;;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;VARIABLES.KOUNT = SELECT COUNT(*) FROM Products.ProductData WHERE Products.ProductData.Name = input.name;&#xa;IF(VARIABLES.KOUNT > 0)&#xa;BEGIN&#xa;ERROR &quot;Specified Name already exists in database - Choose another Name to insert.&quot;;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;INSERT INTO Products.ProductData (Products.ProductData.Instr_ID, Products.ProductData.Name, Products.ProductData.Type, Products.ProductData.Issuer, Products.ProductData.Exchange, Products.ProductData.ISDJI, Products.ProductData.ISSP500, Products.ProductData.ISNAS100, Products.ProductData.ISAMEXINT, Products.ProductData.PriBusiness) VALUES (INPUT.Instr_ID, INPUT.Name, INPUT.Type, INPUT.Issuer, INPUT.Exchange, INPUT.ISDJI, INPUT.ISSP500, INPUT.ISNAS100, INPUT.ISAMEXINT, INPUT.PriBusiness);&#xa;VARIABLES.ROWS_UPDATED = INSERT INTO Products.ProductSymbols (Products.ProductSymbols.Instr_ID, Products.ProductSymbols.Symbol_Type, Products.ProductSymbols.Symbol, Products.ProductSymbols.CUSIP) VALUES (INPUT.Instr_ID, INPUT.Symbol_Type, INPUT.Symbol, INPUT.CUSIP);&#xa;END&#xa;END&#xa;END&#xa;END&#xa;END" updateSql="CREATE PROCEDURE&#xa;BEGIN&#xa;IF(HAS CRITERIA ON (Updates.UpdateProduct.Name, Updates.UpdateProduct.Symbol))&#xa;BEGIN&#xa;UPDATE Products.ProductData SET Products.ProductData.Name = INPUT.Name, Products.ProductData.Type = INPUT.Type, Products.ProductData.Issuer = INPUT.Issuer, Products.ProductData.Exchange = INPUT.Exchange, Products.ProductData.ISAMEXINT = INPUT.ISAMEXINT, Products.ProductData.PriBusiness = INPUT.PriBusiness WHERE TRANSLATE = CRITERIA ON (Updates.UpdateProduct.Name);&#xa;VARIABLES.ROWS_UPDATED = UPDATE Products.ProductSymbols SET Products.ProductSymbols.Instr_ID = INPUT.Instr_ID, Products.ProductSymbols.Symbol_Type = INPUT.Symbol_Type, Products.ProductSymbols.Symbol = INPUT.Symbol, Products.ProductSymbols.CUSIP = INPUT.CUSIP WHERE TRANSLATE = CRITERIA ON (Updates.UpdateProduct.Symbol);&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;ERROR &quot;User must supply product name and symbol.&quot;;&#xa;END&#xa;END" deleteSql="CREATE PROCEDURE&#xa;BEGIN&#xa;DECLARE string VARIABLES.I_ID;&#xa;IF(HAS CRITERIA ON (Updates.UpdateProduct.Name))&#xa;BEGIN&#xa;VARIABLES.I_ID = SELECT Products.ProductData.Instr_ID FROM Products.ProductData WHERE TRANSLATE CRITERIA ON (Updates.UpdateProduct.Name);&#xa;VARIABLES.ROWS_UPDATED = DELETE FROM Products.ProductData WHERE Products.ProductData.Instr_ID = VARIABLES.I_ID;&#xa;DELETE FROM Products.ProductSymbols WHERE Products.ProductSymbols.Instr_ID = VARIABLES.I_ID;&#xa;END&#xa;ELSE&#xa;BEGIN&#xa;IF(HAS CRITERIA ON (Updates.UpdateProduct.Instr_ID))&#xa;BEGIN&#xa;VARIABLES.I_ID = SELECT Products.ProductSymbols.Instr_ID FROM Products.ProductSymbols WHERE TRANSLATE CRITERIA ON (Updates.UpdateProduct.Instr_ID);&#xa;VARIABLES.ROWS_UPDATED = DELETE FROM Products.ProductSymbols WHERE TRANSLATE CRITERIA ON (Updates.UpdateProduct.Instr_ID);&#xa;DELETE FROM Products.ProductData WHERE Products.ProductData.Instr_ID = VARIABLES.I_ID;&#xa;END&#xa;END&#xa;END" insertSqlDefault="false" updateSqlDefault="false" deleteSqlDefault="false"/>
        <aliases xmi:uuid="mmuuid:eabb7fc1-6231-1f26-8433-802bd8dcc550" alias="PRODUCTDATA">
          <aliasedObject href="Products.xmi#mmuuid/f401d342-618c-1f26-8433-802bd8dcc550"/>
        </aliases>
        <aliases xmi:uuid="mmuuid:eba06180-6231-1f26-8433-802bd8dcc550" alias="PRODUCTSYMBOLS">
          <aliasedObject href="Products.xmi#mmuuid/f5dad900-618c-1f26-8433-802bd8dcc550"/>
        </aliases>
      </helper>
      <nested outputs="mmuuid/eba06181-6231-1f26-8433-802bd8dcc550">
        <inputs href="Products.xmi#mmuuid/f5dad902-618c-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/eba06187-6231-1f26-8433-802bd8dcc550">
        <inputs href="Products.xmi#mmuuid/f5dad906-618c-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/ec948581-6231-1f26-8433-802bd8dcc550">
        <inputs href="Products.xmi#mmuuid/f5dad905-618c-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/ec948586-6231-1f26-8433-802bd8dcc550">
        <inputs href="Products.xmi#mmuuid/f5dad901-618c-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/ec94858b-6231-1f26-8433-802bd8dcc550">
        <inputs href="Products.xmi#mmuuid/f401d347-618c-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/ed88a980-6231-1f26-8433-802bd8dcc550">
        <inputs href="Products.xmi#mmuuid/f401d34a-618c-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/ee6d8b40-6231-1f26-8433-802bd8dcc550">
        <inputs href="Products.xmi#mmuuid/f401d346-618c-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/ee6d8b45-6231-1f26-8433-802bd8dcc550">
        <inputs href="Products.xmi#mmuuid/f401d349-618c-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/ef61af42-6231-1f26-8433-802bd8dcc550">
        <inputs href="Products.xmi#mmuuid/f401d343-618c-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/ef61af47-6231-1f26-8433-802bd8dcc550">
        <inputs href="Products.xmi#mmuuid/f401d344-618c-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/f0469100-6231-1f26-8433-802bd8dcc550">
        <inputs href="Products.xmi#mmuuid/f4f5f740-618c-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/f0469105-6231-1f26-8433-802bd8dcc550">
        <inputs href="Products.xmi#mmuuid/f401d345-618c-1f26-8433-802bd8dcc550"/>
      </nested>
      <nested outputs="mmuuid/f046910a-6231-1f26-8433-802bd8dcc550">
        <inputs href="Products.xmi#mmuuid/f401d348-618c-1f26-8433-802bd8dcc550"/>
      </nested>
      <inputs href="Products.xmi#mmuuid/f401d342-618c-1f26-8433-802bd8dcc550"/>
      <inputs href="Products.xmi#mmuuid/f5dad900-618c-1f26-8433-802bd8dcc550"/>
    </transformationMappings>
  </Transformation:TransformationContainer>
</xmi:XMI>
