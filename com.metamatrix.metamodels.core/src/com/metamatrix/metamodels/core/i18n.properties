#==================================================================================== 
# JBoss, Home of Professional Open Source. 
# 
# Copyright (c) 2000, 2009 MetaMatrix, Inc. and Red Hat, Inc. 
# 
# Some portions of this file may be copyrighted by other 
# contributors and licensed to Red Hat, Inc. under one or more 
# contributor license agreements. See the copyright.txt file in the 
# distribution for a full listing of individual contributors. 
# 
# This program and the accompanying materials 
# are made available under the terms of the Eclipse Public License v1.0 
# which accompanies this distribution, and is available at 
# http://www.eclipse.org/legal/epl-v10.html 
#==================================================================================== 

_UI_CreateChild_text = {0}
_UI_CreateChild_text2 = {1} {0}
_UI_CreateChild_text3 = {1}
_UI_CreateChild_tooltip = Create New {0} Under {1} Feature
_UI_CreateChild_description = Create a new child of type {0} for the {1} feature of the selected {2}.
_UI_CreateSibling_description = Create a new sibling of type {0} for the selected {2}, under the {1} feature of their parent.
_UI_PropertyDescriptor_description = The {0} of the {1}
_UI_XClass_type = Class Extension
_UI_XPackage_type = Extension Package
_UI_XEnum_type = Extension Enumeration
_UI_XEnumLiteral_type = Enumeration Literal
_UI_XAttribute_type = XAttribute
_UI_Unknown_type = Object
_UI_Unknown_datatype= Value
_UI_XClass_extendedClass_feature = Extended Class
_UI_Unknown_feature = Unspecified

# ================================================================================================================================
# EMF-generated properties for Extension metamodel

_UI_Boolean_true_literal = True
_UI_XClass_XPackage_feature = Extension Package

# ================================================================================================================================
# Overridden EMF-generated properties for Extension metamodel
# (Must appear after generated properties so they are put into bundle last)

_UI_Annotation_type = Annotation
_UI_AnnotationContainer_type = Annotation Container
_UI_ModelAnnotation_type = Model Annotation
_UI_Link_type = Link
_UI_LinkContainer_type = Link Container
_UI_Datatype_type = Datatype
_UI_Identifiable_type = Identifiable
_UI_ModelImport_type = Model Import
_UI_Unknown_type = Object

_UI_Unknown_datatype= Value

_UI_Annotation_description_feature = Description
_UI_Annotation_keywords_feature = Keywords
_UI_Annotation_tags_feature = Tags
_UI_Annotation_annotationContainer_feature = Annotation Container
_UI_Annotation_annotatedObject_feature = Annotated Object
_UI_Annotation_extensionObject_feature = Extension Object
_UI_AnnotationContainer_annotations_feature = Annotations
_UI_ModelAnnotation_description_feature = Description
_UI_ModelAnnotation_nameInSource_feature = Name In Source
_UI_ModelAnnotation_primaryMetamodelUri_feature = Primary Model Class Uri
_UI_ModelAnnotation_modelType_feature = Model Type
_UI_ModelAnnotation_maxSetSize_feature = Max Set Size
_UI_ModelAnnotation_visible_feature = Visible
_UI_ModelAnnotation_supportsDistinct_feature = Supports Distinct
_UI_ModelAnnotation_supportsJoin_feature = Supports Join
_UI_ModelAnnotation_supportsOrderBy_feature = Supports Order By
_UI_ModelAnnotation_supportsOuterJoin_feature = Supports Outer Join
_UI_ModelAnnotation_supportsWhereAll_feature = Supports Where All
_UI_ModelAnnotation_tags_feature = Tags
_UI_ModelAnnotation_namespaceUri_feature = Namespace Uri
_UI_ModelAnnotation_ProducerName_feature = Producer Name
_UI_ModelAnnotation_ProducerVersion_feature = Producer Version
_UI_ModelAnnotation_modelImports_feature = Model Imports
_UI_ModelAnnotation_extensionPackage_feature = Extension Package
_UI_Link_name_feature = Name
_UI_Link_description_feature = Description
_UI_Link_references_feature = References
_UI_Link_linkedObjects_feature = Linked Objects
_UI_Link_linkContainer_feature = Link Container
_UI_LinkContainer_links_feature = Links
_UI_Identifiable_uuid_feature = Uuid
_UI_ModelImport_name_feature = Name
_UI_ModelImport_path_feature = Path
_UI_ModelImport_modelLocation_feature = Model Location
_UI_ModelImport_uuid_feature = Uuid
_UI_ModelImport_modelType_feature = Model Type
_UI_ModelImport_primaryMetamodelUri_feature = Primary Model Class Uri
_UI_ModelImport_model_feature = Model
_UI_Unknown_feature = Unspecified

_UI_ModelType_PHYSICAL_literal = PHYSICAL
_UI_ModelType_VIRTUAL_literal = VIRTUAL
_UI_ModelType_TYPE_literal = TYPE
_UI_ModelType_VDB_ARCHIVE_literal = VDB_ARCHIVE
_UI_ModelType_UNKNOWN_literal = UNKNOWN
_UI_ModelType_FUNCTION_literal = FUNCTION
_UI_ModelType_CONFIGURATION_literal = CONFIGURATION
_UI_ModelType_METAMODEL_literal = METAMODEL
_UI_ModelType_EXTENSION_literal = EXTENSION
_UI_ModelType_LOGICAL_literal = LOGICAL
_UI_ModelType_MATERIALIZATION_literal = MATERIALIZATION

# ================================================================================================================================
# Overridden EMF-generated properties for Core metamodel
# (Must appear after generated properties so they are put into bundle last)

_UI_ModelAnnotation_supportsWhereAll_feature = Supports ''Where All''
_UI_ModelAnnotation_supportsJoin_feature = Supports ''Join''
_UI_ModelAnnotation_supportsDistinct_feature = Supports ''Distinct''
_UI_ModelAnnotation_supportsOrderBy_feature = Supports ''Order By''
_UI_ModelAnnotation_supportsOuterJoin_feature = Supports ''Outer Join''
_UI_ModelAnnotation_supportsWhereAll_feature = Supports ''Where All''
_UI_ModelAnnotation_maxSetSize_feature = Set Criteria Max Size
_UI_ModelAnnotation_namespaceUri_feature=Namespace URI
_UI_PropertyDescriptor_description=Unique model identifier

_UI_ModelImport_modelType_feature = Type of Model
_UI_ModelImport_uuid_feature = UUID

# ================================================================================================================================
# Properties for Core metamodel

_UI_ModelAnnotation_supportsWhereAll_feature_category    = Model
_UI_ModelAnnotation_supportsJoin_feature_category        = Model
_UI_ModelAnnotation_supportsDistinct_feature_category    = Model
_UI_ModelAnnotation_supportsOrderBy_feature_category     = Model
_UI_ModelAnnotation_supportsOuterJoin_feature_category   = Model
_UI_ModelAnnotation_maxSetSize_feature_category          = Model
_UI_ModelAnnotation_nameInSource_feature_category        = Model
_UI_ModelAnnotation_description_feature_category         = Model
_UI_ModelAnnotation_modelType_feature_category           = Model
_UI_ModelAnnotation_virtual_feature_category             = Model
_UI_ModelAnnotation_primaryMetamodelUri_feature_category = Model
_UI_ModelAnnotation_visible_feature_category             = Model
_UI_ModelAnnotation_extensionPackage_feature_category    = Model
_UI_ModelAnnotation_namespaceUri_feature_category        = Model

_UI_ModelAnnotation_supportsWhereAll_feature_description    = Defines whether the source supports queries with WHERE ALL.
_UI_ModelAnnotation_supportsJoin_feature_description        = Defines whether the source supports queries with JOIN.
_UI_ModelAnnotation_supportsDistinct_feature_description    = Defines whether the source supports queries with DISTINCT.
_UI_ModelAnnotation_supportsOrderBy_feature_description     = Defines whether the source supports queries with ORDER BY.
_UI_ModelAnnotation_supportsOuterJoin_feature_description   = Defines whether the source supports queries with OUTER JOIN.
_UI_ModelAnnotation_maxSetSize_feature_description          = Defines the maximum number of expressions that can go into an "IN" clause.  For example, various relational database systems have different maximums: ''250'' for Sybase, ''1000'' for Oracle, and ''16,000+'' for SQL Server.
_UI_ModelAnnotation_nameInSource_feature_description        = The (optional) name as defined in the original source.  If the model name is acceptable, this need not be set.
_UI_ModelAnnotation_description_feature_description         = The description of the model.
_UI_ModelAnnotation_modelType_feature_description           = The type of model.
#_UI_ModelAnnotation_virtual_feature_description             = Whether the model is a virtual model
_UI_ModelAnnotation_primaryMetamodelUri_feature_description = The URI of the primary model class that is used in this model.
_UI_ModelAnnotation_visible_feature_description             = Defines whether this model is considered visible when deployed.
_UI_ModelAnnotation_extensionPackage_feature_description    = The Model Extension package that defines extensions used by this model.

_UI_ModelType_PHYSICAL = Source Model
_UI_ModelType_VIRTUAL = View Model
_UI_ModelType_LOGICAL = Logical Model
_UI_ModelType_TYPE = Datatype Model
_UI_ModelType_VDB_ARCHIVE = VDB archive
_UI_ModelType_UNKNOWN = Unknown
_UI_ModelType_FUNCTION = User Defined Function
_UI_ModelType_CONFIGURATION = Configuration Model
_UI_ModelType_METAMODEL = Model Class
_UI_ModelType_EXTENSION = Model Class Extension

# ================================================================================================================================
# Model Annotation Item Provider

ModelAnnotationItemProvider._UI_ModelAnnotation_SupportsWhereAll = For physical relational models, indicates whether a query with no criteria is allowed.
ModelAnnotationItemProvider._UI_ModelAnnotation_SupportsJoin = For physical relational models, indicates whether joins can be pushed to the source.
ModelAnnotationItemProvider._UI_ModelAnnotation_SupportsDistinct = For physical relational models, indicates whether SELECT DISTINCT can be pushed to the source. 
ModelAnnotationItemProvider._UI_ModelAnnotation_SupportsOrderBy = For physical relational models, indicates whether ORDER BY can be pushed to the source. 
ModelAnnotationItemProvider._UI_ModelAnnotation_SupportsOuterJoin = For physical relational models, indicates whether OUTER joins can be pushed to the source.
ModelAnnotationItemProvider._UI_ModelAnnotation_MaxSetSize = For physical models, indicates the maximum number of values that can be passed in an IN criteria.

# ================================================================================================================================
# Data Access Aspect Factory Impls

DataAccessSqlAspectFactoryImpl.Invalid_Classifer_ID,_for_creating_SQL_Aspect__1=Invalid Classifer ID, for creating SQL Aspect 
DataAccessUmlAspectFactoryImpl.Invalid_Classifer_ID,_for_creating_UML_Aspect__1=Invalid Classifer ID, for creating UML Aspect 

UriValidator.componentValid=The value "{1}" is a valid {0}.
UriValidator.componentNotValid=The value "{1}" is not a valid {0}.
UriValidator.uriComponentInvalid=The URI value "{1}" has an invalid {0}.
UriValidator.genericUriError=The URI value "{0}" is not valid.
UriValidator.nullValue=The {0} URI component is null.
UriValidator.uri=URI
UriValidator.uricomponents.authority=authority
UriValidator.uricomponents.device=device
UriValidator.uricomponents.fragment=fragment
UriValidator.uricomponents.jarauthority=jarauthority
UriValidator.uricomponents.opaquepart=opaquepart
UriValidator.uricomponents.query=query
UriValidator.uricomponents.scheme=scheme
UriValidator.uricomponents.segment=segment
UriValidator.uricomponents.multiplesegment=segment array

ModelAnnotationImpl.invalidNamespaceUriMsg=The value "{0}" is not valid for a model Namespace URI. Reason: {1}
