<!-- A sample build file for use with Hudson. Note that forceContextQualifier 
	 is being set, which overrides tag/branch values found in *.map files 
-->
<project default="run">
	<!-- FIXME if required -->
	<!-- <property name="debug" value="true" /> -->

	<target name="run" depends="init">

		<!-- FIXME if required: Set a valid path to JAVA_HOME, if Eclipse's ${java.home}/../bin/javac cannot be found -->
		<condition property="JAVA_HOME" value="${java.home}" else="${java.home}/..">
			<available file="${java.home}/bin/javac" type="file" />
		</condition>

		<!-- FIXME if required: if not using this type of qualifier, comment next 4 lines -->
		<tstamp>
			<format property="buildTimestamp" pattern="yyyyMMddHHmm" />
		</tstamp>
		<property name="forceContextQualifier" value="v${buildTimestamp}" />

		<!-- 1. To build from CVS sources using information in the ./maps/*.map files, comment these next two properties
			 2. Or, to build from sources in the workspace, use these properties. You can also use absolute paths if needed.
		-->
		<!-- <property name="localSourceCheckoutDir" value="${basedir}/.." />
		<property name="relengBuilderDir" value="${basedir}" /> -->

		<property file="build.properties" />
		<ant antfile="${relengCommonBuilderDir}/build.xml" />
	</target>

	<condition property="isInHudson" value="true">
		<or>
			<contains string="${user.dir}" substring="hudson" />
			<contains string="${user.name}" substring="hudson" />
			<contains string="${user.home}" substring="hudson" />
		</or>
	</condition>
	<target name="local" unless="isInHudson">
		<property name="WORKINGDIR" value="${basedir}/.." />
		<property name="COMMON_TOOLS" value="${java.io.tmpdir}/build/downloads" />
	</target>

	<!-- FIXME if required: use a newer version -->
	<target name="get.ant-contrib" unless="ant-contrib.jar.exists">
		<property name="ANTCONTRIB_MIRROR" value="http://downloads.sourceforge.net/ant-contrib/" />
		<get usetimestamp="true"
		     dest="${COMMON_TOOLS}/ant-contrib-1.0b2-bin.zip"
		     src="${ANTCONTRIB_MIRROR}/ant-contrib-1.0b2-bin.zip"
		/>
		<touch file="${COMMON_TOOLS}/ant-contrib-1.0b2-bin.zip" />
		<mkdir dir="${java.io.tmpdir}/ant-contrib-1.0b2-bin.zip_" />
		<unzip src="${COMMON_TOOLS}/ant-contrib-1.0b2-bin.zip"
		       dest="${java.io.tmpdir}/ant-contrib-1.0b2-bin.zip_"
		       overwrite="true"
		/>
		<copy file="${java.io.tmpdir}/ant-contrib-1.0b2-bin.zip_/ant-contrib/lib/ant-contrib.jar"
		      tofile="${COMMON_TOOLS}/ant-contrib.jar"
		      failonerror="true"
		/>
		<delete dir="${java.io.tmpdir}/ant-contrib-1.0b2-bin.zip_" includeemptydirs="true" quiet="true" />
	</target>

	<!-- FIXME if required: use a newer version -->
	<target name="get.ant4eclipse" unless="ant4eclipse.jar.exists">
		<property name="ANTCONTRIB_MIRROR" value="http://downloads.sourceforge.net/ant4eclipse/" />
		<get usetimestamp="true"
		     dest="${COMMON_TOOLS}/org.ant4eclipse_1.0.0.M3.zip"
		     src="${ANTCONTRIB_MIRROR}/org.ant4eclipse_1.0.0.M3.zip"
		/>
		<touch file="${COMMON_TOOLS}/org.ant4eclipse_1.0.0.M3.zip" />
		<mkdir dir="${java.io.tmpdir}/org.ant4eclipse_1.0.0.M3.zip_" />
		<unzip src="${COMMON_TOOLS}/org.ant4eclipse_1.0.0.M3.zip"
		       dest="${java.io.tmpdir}/org.ant4eclipse_1.0.0.M3.zip_"
		       overwrite="true"
		/>
		<copy file="${java.io.tmpdir}/org.ant4eclipse_1.0.0.M3.zip_/org.ant4eclipse_1.0.0.M3.jar"
		      tofile="${COMMON_TOOLS}/ant4eclipse.jar"
		      failonerror="true"
		/>
		<delete dir="${java.io.tmpdir}/org.ant4eclipse_1.0.0.M3.zip_" includeemptydirs="true" quiet="true" />
	</target>

	<target name="get.athena.common.releng.and.releng.basebuilder">
		<!-- find relengCommonBuilderDir and relengBaseBuilderDir -->
		<for param="dir" list="${COMMON_TOOLS}, ${basedir}/../.., ${basedir}/.." delimiter=", ">
			<sequential>
				<if>
					<available file="@{dir}/org.eclipse.dash.common.releng" type="dir" />
					<then>
						<property name="relengCommonBuilderDir" value="@{dir}/org.eclipse.dash.common.releng" />
					</then>
				</if>
				<if>
					<available file="@{dir}/org.eclipse.releng.basebuilder" type="dir" />
					<then>
						<property name="relengBaseBuilderDir" value="@{dir}/org.eclipse.releng.basebuilder" />
					</then>
				</if>

			</sequential>
		</for>

		<if>
			<or>
				<not>
					<isset property="relengCommonBuilderDir" />
				</not>
				<not>
					<isset property="relengBaseBuilderDir" />
				</not>
			</or>
			<then>
				<!-- fetch projects using psf file; create it if needed -->
				<if>
					<not>
						<available file="${basedir}/psfs/athena.psf" type="file" />
					</not>
					<then>
						<!-- FIXME if required: change these tag/branches -->
						<property name="basebuilderTag" value="r35x_v20090811" />
						<property name="commonrelengTag" value="HEAD" />

						<echo>Create ${basedir}/psfs/athena.psf file</echo>
						<mkdir dir="psfs" />
						<echo file="${basedir}/psfs/athena.psf">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;psf version="2.0">
&lt;provider id="org.eclipse.team.cvs.core.cvsnature">
&lt;project reference="1.0,:pserver:anonymous@dev.eclipse.org:/cvsroot/technology,org.eclipse.dash/athena/org.eclipse.dash.commonbuilder/org.eclipse.dash.commonbuilder.releng,org.eclipse.dash.common.releng,${commonrelengTag}"/>
&lt;project reference="1.0,:pserver:anonymous@dev.eclipse.org:/cvsroot/eclipse,org.eclipse.releng.basebuilder,org.eclipse.releng.basebuilder,${basebuilderTag}"/>
&lt;/provider>
&lt;/psf></echo>
					</then>
				</if>
				<echo>Fetch projects from athena.psf into ${COMMON_TOOLS}</echo>
				<cvsGetProjectSet cvsreallyquiet="true"
				                  cvsUser="anonymous"
				                  cvsPwd=""
				                  command="checkout"
				                  projectSet="psfs/athena.psf"
				                  destination="${COMMON_TOOLS}"
				/>
			</then>
		</if>
	</target>

	<target name="init" depends="local">
		<property name="WORKINGDIR" value="${basedir}/.." />
		<property name="COMMON_TOOLS" value="${basedir}/../tools" />
		<mkdir dir="${COMMON_TOOLS}" />

		<available file="${COMMON_TOOLS}/ant-contrib.jar" type="file" property="ant-contrib.jar.exists" />
		<antcall target="get.ant-contrib" />
		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement location="${COMMON_TOOLS}/ant-contrib.jar" />
			</classpath>
		</taskdef>

		<macrodef name="debug">
			<text name="echo" />
			<sequential>
				<if>
					<and>
						<isset property="debug" />
						<istrue value="${debug}" />
					</and>
					<then>
						<echo message="@{echo}" />
					</then>
				</if>
			</sequential>
		</macrodef>

		<available file="${COMMON_TOOLS}/ant4eclipse.jar" type="file" property="ant4eclipse.jar.exists" />
		<antcall target="get.ant4eclipse" />
		<taskdef resource="org/ant4eclipse/antlib.xml">
			<classpath>
				<pathelement location="${COMMON_TOOLS}/ant4eclipse.jar" />
			</classpath>
		</taskdef>

		<antcallback target="get.athena.common.releng.and.releng.basebuilder" return="relengCommonBuilderDir, relengBaseBuilderDir"/>
	</target>

</project>
