<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="learn">
  <title>Learning about Virtual Databases (VDB)</title>
  <sect1>
    <title>What is a Virtual Database?</title>
    <para> A Virtual Database (VDB) is an artifact that defines the logical schema model combining one or more
      physical data sources to provide easy data integration. This is accomplished by use of virtual tables,
      virtual views and virtual procedures, transformed by queries to their underlying
      physical data sources. The physical sources can be JDBC sources, delimited text files, spreadsheets
      or even Web services.</para>
    <para>Your JDBC application references the virtual (logical) schema defined in this VDB. When tables, or
      other objects, in the VDB's models are queried, the Teiid query engine interprets the virtual schema,
      makes the appropriate calls to the actual physical sources, combines and translates them as requested, and
      returns the top level results to the application.</para>
  </sect1>
  <sect1>
    <title>What is Teiid?</title>
    <para> Teiid is runtime for executing queries against a VDB. Before you can access your data in a federated
      manner, use the Teiid Designer to build a VDB. This picture shows the relationship between the tools
      involved.</para>
    <figure id="lifecycle">
      <title>Lifecycle of Events</title>
      <graphic align="center" scale="100" fileref="../images/steps.png" />
    </figure>
    <para>The Teiid Designer tool lets you define physical data sources by importing the required metadata
      (schema) from these sources. Once the metadata is imported, use the Designer to build a virtual data model.
      The collection of physical and logical models form a virtual schema. Once the user has completed the models,
      the Designer is used to package them in a Virtual Database, or VDB. So, a VDB can be further defined as a
      collection of logical (virtual) data models.</para>
  </sect1>
</chapter>