<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="connector">
    <title>Using the Connector</title>
    <para>The Salesforce Connector supports the SELECT, DELETE, INSERT
		and UPDATE operations.
    </para>
    <sect1>
        <title>SQL Processing</title>
        <para>Salesforce does not provide the same set of
			functionality as a relational database. For example, Salesforce does
			not support arbitrary joins between tables. However, working in
			combination with the Teiid Query Planner, the Salesforce
			connector
			supports nearly all of the SQL syntax supported by the
			Teiid.
        </para>
        <para>The Salesforce Connector executes SQL commands by “pushing
			down” the command to Salesforce whenever possible, based on the
			supported capabilities. Teiid will automatically provide
			additional database functionality when the Salesforce Connector does
			not	explicitly provide support for a given SQL construct. In these
			cases, the SQL construct cannot be “pushed down” to the data source,
			so it will be evaluated in Teiid, in order to ensure that the
			operation is performed.
        </para>
        <para>In cases where certain SQL capabilities cannot be pushed down
			to Salesforce, Teiid will push down the capabilities that are
			supported, and fetch a set of data from Salesforce. Then, Teiid
			will evaluate the additional capabilities, creating a subset of the
			original data set. Finally, Teiid will pass the result to the
			client.
        </para>

        <programlisting><![CDATA[
			SELECT sum(Reports) FROM Supervisor where Division = 'customer support';           
         ]]>        
        </programlisting>
        <para>Neither Salesforce nor the Salesforce Connector support
			the sum() scalar function, but they do support CompareCriteriaEquals,
			so the query that is passed to Salesforce by the connector will be
			transformed to this query.
        </para>
        <programlisting><![CDATA[
			SELECT Reports FROM Supervisor where Division = 'customer support';           
         ]]>        
        </programlisting>
        <para>The sum() scalar function will be applied by the Teiid
			Query Engine to the result set returned by the connector.
        </para>
        <para>In some cases multiple calls to the Salesforce application
			will be made to support the SQL passed to the connector.
        </para>
        <programlisting><![CDATA[
			DELETE From Case WHERE Status = 'Closed';           
         ]]>        
        </programlisting>
        <para>The API in Salesforce to delete objects only supports
			deleting by ID. In order to accomplish this the Salesforce connector
			will first execute a query to get the IDs of the correct objects, and
			then delete those objects. So the above DELETE command will result in
			the following two commands.
        </para>
        <programlisting><![CDATA[
			SELECT ID From Case WHERE Status = 'Closed';
			DELETE From Case where ID IN (<result of query>);*           
         ]]>    
        </programlisting>
        <para>*The Salesforce API DELETE call is not expressed in SQL, but
			the above is an SQL equivalent expression.
        </para>
        <para>It's useful to be aware of unsupported capabilities, in
			order
			to avoid fetching large data sets from Salesforce and making you
			queries as performant as possible. See the Supported Capabilities
			section in the appendix.
        </para>
    </sect1>
    <sect1>
        <title>Selecting from Multi-Select Picklists</title>
        <para>
			A multi-select picklist is a field type in Salesforce that can
			contain multiple values in a single field. Query criteria operators
			for fields of this type in SOQL are limited to EQ, NE, includes and
			excludes. The full Salesforce documentation for selecting from
			mullti-select picklists can be found at the following link.
            <ulink
				url="http://www.salesforce.com/us/developer/docs/api/index_Left.htm#StartTopic=Content%2Fsforce_api_calls_soql_querying_multiselect_picklists.htm|SkinName=webhelp">Querying Mulit-select Picklists
            </ulink>
        </para>
        <para>Teiid SQL does not support the includes or
			excludes operators, but the Salesforce connector provides user
			defined function definitions for these operators that provided
			equivalent functionality for fields of type multi-select. The
			definition for the functions is:
        </para>
        <programlisting><![CDATA[
			boolean includes(Column column, String param)
			boolean excludes(Column column, String param)           
         ]]>        
        </programlisting>
        <para>For example, take a single multi-select picklist column
			called Status that contains all of these values.
        </para>
        <itemizedlist mark='opencircle'>
            <listitem>
                <para>
					current
                </para>
            </listitem>
            <listitem>
                <para>
					working
                </para>
            </listitem>
            <listitem>
                <para>
					critical
                </para>
            </listitem>
        </itemizedlist>
        <para>For that column, all of the below are valid queries:</para>
        <programlisting><![CDATA[
			SELECT * FROM Issue WHERE true = includes (Status, 'current, working' );
			SELECT * FROM Issue WHERE true = excludes (Status, 'current, working' );
			SELECT * FROM Issue WHERE true = includes (Status, 'current;working, critical' );           
         ]]>        
        </programlisting>
        <para>EQ and NE criteria will pass to Salesforce as supplied. For
			example, these queries will not be modified by the connector.
        </para>
        <programlisting><![CDATA[
			SELECT * FROM Issue WHERE Status = 'current';
			SELECT * FROM Issue WHERE Status = 'current;critical';
			SELECT * FROM Issue WHERE Status != 'current;working';           
         ]]>        
        </programlisting>
    </sect1>
    <sect1>
        <title>Selecting All Objects</title>
        <para>
			The Salesforce connector supports the calling the queryAll operation
			from the Salesforce API. The queryAll operation is equivalent
			to the query operation with the exception that it returns data about
            <emphasis role="strong">all current and deleted</emphasis>
			objects in the system.
        </para>
        <para>The connector determines if it will call the
			query or queryAll operation via reference to the
			 isDeleted property present on each  Salesforce object, 
			 and modeled as a column on each table generated by
			the importer. By default this value is set to
			False when the model is generated and thus the connector calls
			query. Users are free to change the value in the model to True,
			changing the default behavior of the connector to be queryAll.
        </para>
        <para>The behavior is different if isDeleted is used as a parameter
			in the query. If the isDeleted column is used as a parameter
			in the query, and the value is 'true' the connector will call queryAll.
        </para>
        <programlisting><![CDATA[
			select * from Contact where isDeleted = true;           
         ]]>
        </programlisting>
        <para>If the isDeleted column is used as a parameter in the query,
			and the value is 'false' the connector perform the default behavior
			will call query.
        </para>
        <programlisting><![CDATA[
			select * from Contact where isDeleted = false;           
         ]]>
        </programlisting>
    </sect1>

    <sect1>
        <title>Selecting Updated Objects</title>
        <para>If the option is selected when importing metadata from
			Salesforce, a GetUpdated procedure is generated in the model with
			the following sturcture:
        </para>
        <programlisting><![CDATA[
			GetUpdated (ObjectName IN string,
			 	StartDate IN datetime, 
			 	EndDate IN datetime,
			 	LatestDateCovered OUT datetime)
			returns
				ID string 
         ]]>
        </programlisting>
        <para>
			See the description of the
            <ulink
				url="http://www.salesforce.com/us/developer/docs/api/Content/sforce_api_calls_getupdated.htm">GetUpdated
            </ulink>
			operation in the Salesforce documentation for usage details.
        </para>
    </sect1>
    <sect1>
        <title>Selecting Deleted Objects</title>
        <para>If the option is selected when importing metadata from
			Salesforce, a GetDeleted procedure is generated in the model with
			the following sturcture:
        </para>
        <programlisting><![CDATA[
			GetDeleted (ObjectName IN string,
			 	StartDate IN datetime, 
			 	EndDate IN datetime,
			 	EarliestDateAvailable OUT datetime,
			 	LatestDateCovered OUT datetime)
			returns
				ID string,
				DeletedDate datetime
         ]]>
        </programlisting>
        <para>
			See the description of the
            <ulink
				url="http://www.salesforce.com/us/developer/docs/api/Content/sforce_api_calls_getdeleted.htm">GetDeleted
            </ulink>
			operation in the Salesforce documentation for usage details.
        </para>

    </sect1>
</chapter>
	
