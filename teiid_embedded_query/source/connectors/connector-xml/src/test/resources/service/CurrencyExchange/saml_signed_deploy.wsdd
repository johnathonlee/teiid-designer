<!-- Use this file to deploy some handlers/chains and services      -->
<!-- Two ways to do this:                                           -->
<!--   java org.apache.axis.client.AdminClient deploy.wsdd          -->
<!--      after the axis server is running                          -->
<!-- or                                                             -->
<!--   java org.apache.axis.utils.Admin client|server deploy.wsdd   -->
<!--      from the same directory that the Axis engine runs         -->

<deployment
    xmlns="http://xml.apache.org/axis/wsdd/"
    xmlns:java="http://xml.apache.org/axis/wsdd/providers/java">

  <!-- Services from CurrencyExchangeService WSDL service -->

	 <globalConfiguration>
	   <parameter name="enableNamespacePrefixOptimization" value="false" />
	   <parameter name="disablePrettyXML" value="true"/>	   
	 </globalConfiguration>
	 
  <service name="CurrencyExchangeService" provider="java:RPC" style="rpc" use="encoded">
	 
		<!-- thank you dims..
		 action: if the sender specifies "SAMLTokenSigned" then DoAllSender
		 performs two actions: inserting a SAML Token (unsigned) _and_ an
		 associated Signature. Thus, at the receiver's side, we need to
		 define both :-)
		 -->
        <requestFlow>
            <handler type="java:org.apache.ws.axis.security.WSDoAllReceiver">
                <parameter name="action" value="Timestamp Signature SAMLTokenUnsigned"/>
                <parameter name="signaturePropFile" value="com/metamatrix/connector/xmlsource/soap/server_crypto.properties" />                
            </handler>
        </requestFlow>
	  	    
      <parameter name="wsdlTargetNamespace" value="http://www.metamatrix.com/CurrencyExchangeService.wsdl"/>
      <parameter name="wsdlServiceElement" value="CurrencyExchangeService"/>
      <parameter name="wsdlServicePort" value="CurrencyExchangePort"/>
      <parameter name="className" value="com.metamatrix.www.CurrencyExchangeService.CurrencyExchange"/>
      <parameter name="wsdlPortType" value="CurrencyExchangePortType"/>
      <parameter name="typeMappingVersion" value="1.2"/>
      <parameter name="allowedMethods" value="*"/>

  </service>
</deployment>
