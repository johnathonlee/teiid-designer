<?xml version='1.0' encoding='UTF-8'?>
 
<!-- =============================================================================== 
 # JBoss, Home of Professional Open Source. 
 # 
 # Copyright (c) 2000, 2009 MetaMatrix, Inc. and Red Hat, Inc. 
 # 
 # Some portions of this file may be copyrighted by other 
 # contributors and licensed to Red Hat, Inc. under one or more 
 # contributor license agreements. See the copyright.txt file in the 
 # distribution for a full listing of individual contributors. 
 # 
 # This program and the accompanying materials 
 # are made available under the terms of the Eclipse Public License v1.0 
 # which accompanies this distribution, and is available at 
 # http://www.eclipse.org/legal/epl-v10.html 
 # ================================================================================== --> 

<schema targetNamespace="com.metamatrix.modeler.ui">
<annotation>
      <appInfo>
         <meta.schema plugin="com.metamatrix.modeler.ui" id="diagramLabelProvider" name="Diagram Label Provider"/>
      </appInfo>
      <documentation>
         The Diagram Label Provider extension point allows plugins to decorate Diagram instances in any ModelViewer.  The Modeler&apos;s ILabelProvider will call getText and getImage for all Diagram instances of the type specified by the diagramType tag.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="class"/>
            <element ref="diagramType" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="class">
      <annotation>
         <documentation>
            The ILabelProvider implementation for this extension
         </documentation>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  The full class name of an implementation of ILabelProvider that supplies diagrams of the specified types.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.jface.viewers.ITreeContentProvider"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="diagramType">
      <annotation>
         <documentation>
            Describes the type of Diagram that this provider handles.  This tag may be repeated for each type that this provider supports.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  The value of Diagram&apos;s &quot;type&quot; property that this label provider supports
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

</schema>
