<!--
  JBoss, Home of Professional Open Source.

  See the LEGAL.txt file distributed with this work for information regarding copyright ownership and licensing.

  See the AUTHORS.txt file distributed with this work for a full listing of individual contributors.
-->
<link rel="stylesheet" href="designer_help.css" type="text/css" />
<body>
<p><a href="DesignerTOC.htm"><img src="images/Designer_WebHeader.png" alt="MMHeader" border="0" /></a></p>
<hr>
<p class="maintitle_b24">VDB Facts </p>

<ul class="small_toc_item">
  <li><a href="#What">Description</a></li>
  <li><a href="#How">How is a VDB Defined?</a></li>
  <li><a href="#Validation">VDB Validation</a></li>
  <li><a href="#Deploy">Deploying a VDB for Data Access</a></li>
  <li><a href="#Access">VDBs and Connectors</a></li>
  <li><a href="#Execution">Testing Your VDB</a></li>
  <li><a href="#File">VDB File Formats</a></li>
</ul>

<h3 class="subtitle_b16"><a name="What"></a>VDB Description</h3>
<p class="style4"> <span class="medium">A <strong>VDB</strong>, or <strong>V</strong>irtual <strong>D</strong>ata<strong>b</strong>ase is a container for your models and pertinent source connection data used by Teiid query engine to access your federated data. </span></p>
<h3 class="subtitle_b16"><a name="How"></a>How is a VDB Defined?</h3>
<p class="medium" ><strong> Teiid Designer</strong> allows you to create and edit <strong>VDB</strong>s. The <strong>VDB</strong> is a zip-like file that contains <strong>sources</strong> and <strong>view</strong> <strong>models</strong>, <strong>source connection </strong> information and <strong> index</strong> files used at runtime for data identification and a <strong>manifest</strong> to pull it all together. </p>

<h3 class="subtitle_b16"><a name="Validation">VDB Validation</h3>
<p class="medium"><strong>VDBs</strong> can contain one or more models representing the information to be integrated and exposed to consuming applications. Models must be in a valid state in order for the VDB to be used for data access. Validation of a single model means that it must be in a self-consistent and complete state, meaning that there are no &quot;missing pieces&quot; and no references to non-existent entities. Validation of multiple models checks that all inter-model dependencies are present and resolvable. </p>
<p class="medium">A <strong>VDB</strong> must always be in a complete and valid state in order to be successfully deployed<a href="ExecuteVdbHelp.htm">.</a> Complete means that all information is contained within the <strong>VDB </strong>itself -- there are no external dependencies. During the creation or editing of your VDB, there may be times when errors exist and the VDB can not be deployed or tested, but it can be saved for editing at a later date. </p>

<h3 class="subtitle_b16"><a name="Deploy">Deploying a VDB for Data Access </h3>
<p class="medium">After a VDB is defined, it must be deployed to the Teiid query engine to be accessed. You can select a VDB in your <strong><a href="ModelExplorer.htm">Model Explorer</a></strong> and right-click select &quot;<strong>Modeling &gt; Deploy VDB</strong>&quot; action or drag the VDB onto an existing server connected in your Teiid view. </p>
<h3 class="subtitle_b16"><a name="Access">VDB and Connectors </h3>
<p class="medium"><strong>VDB</strong>s contain two primary varieties of model types - source and view. <strong>Source</strong> models represent the structure and characteristics of physical data sources, whereas <strong>view</strong> models represent the structure and characteristics of abstract structures you want to expose to your applications.</p>
<p class="medium">Each source model must contain connectivity information in order for the Teiid engine understand which connection factory/data source instance to connect with. In particular, a &quot;<strong>Translator</strong>&quot; name and an existing &quot;<strong>JNDI</strong>&quot; name must be defined.</p>
<h3 class="subtitle_b16"><a name="Execution">Testing Your VDB </h3>
<p class="medium"><strong>VDB</strong>s can be tested in  <strong> Designer</strong> by deploying them to a running Teiid server deployed in an application server (ie. JBoss AS), creating and connecting to a Teiid-specific <strong>DTP Connection Profile</strong> and issuing SQL queries in the <strong>DTP perspective's SQL Editor</strong> or <strong>SQL Scrapbook</strong>. In this way, you can iterate between   defining your integration models and testing them out to see if they are   yielding the expected results. </p>
<h3 class="subtitle_b16"><a name="File">VDB File Format </h3>
<p class="medium"><strong>VDB</strong>s are stored in an archive file format, similar to a standard Java JAR format, except for the &quot;<strong>.vdb</strong>&quot; file extension. </p>
<p class="subtitle_b16">Related Topics</p>
<ul>
  <li><a href="CreateVirtualDatabase.htm" class="medium">Create a New VDB</a></li>
  <li><a href="DesignerGettingStarted.htm" class="medium">Getting Started with Designer</a> </li>
</ul>
<hr>
<p class="copyright">See the LEGAL.txt file distributed with this work for information regarding copyright ownership and licensing.</p>
</body>

